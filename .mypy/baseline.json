{"typing_extensions/src/typing_extensions.py": [{".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 17, "column": 4, "severity": "error", "message": "Module \"typing\" has no attribute \"GenericMeta\"; maybe \"Generic\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 17, 17], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 17, "column": 4, "severity": "error", "message": "Name \"GenericMeta\" already defined on line 14", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 17, 17], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 17, "column": 4, "severity": "error", "message": "Module \"typing\" has no attribute \"_type_vars\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 17, 17], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 96, "column": 20, "severity": "error", "message": "Name \"typing._FinalTypingBase\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 96, 96], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 96, "column": 20, "severity": "error", "message": "Name \"typing._FinalTypingBase\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 96, 96], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 96, "column": 20, "severity": "error", "message": "Name \"typing._FinalTypingBase\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 96, 96], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 96, "column": 20, "severity": "error", "message": "Name \"typing._FinalTypingBase\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 96, 96], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_NoReturn", "function_or_member": null, "line": 96, "column": 20, "severity": "error", "message": "Class cannot subclass \"_FinalTypingBase\" (has type \"Any\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 96, 96], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 372, "column": 16, "severity": "error", "message": "Missing type parameters for generic type \"deque\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "type-arg", "description": "Check that generic type arguments are present", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 372, 372], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 372, "column": 4, "severity": "error", "message": "Name \"Deque\" already defined on line 369", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 372, 372], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 388, "column": 4, "severity": "error", "message": "Module \"_collections_abc\" has no attribute \"_check_methods\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 388, 388], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 391, "column": 4, "severity": "error", "message": "Name \"AsyncContextManager\" already defined on line 385", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 391, 391], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 417, "column": 22, "severity": "error", "message": "Missing type parameters for generic type \"OrderedDict\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "type-arg", "description": "Check that generic type arguments are present", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 417, 417], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 433, "column": 18, "severity": "error", "message": "Missing type parameters for generic type \"Counter\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "type-arg", "description": "Check that generic type arguments are present", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 433, 433], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 433, "column": 4, "severity": "error", "message": "Name \"Counter\" already defined on line 430", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 433, 433], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 448, "column": 19, "severity": "error", "message": "Missing type parameters for generic type \"ChainMap\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "type-arg", "description": "Check that generic type arguments are present", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 448, 448], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 448, "column": 4, "severity": "error", "message": "Name \"ChainMap\" already defined on line 446", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 448, 448], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 518, "column": 4, "severity": "error", "message": "Module \"typing\" has no attribute \"_collect_type_vars\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 518, 518], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 542, "column": 4, "severity": "error", "message": "Name \"Protocol\" already defined on line 515", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 542, 542], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 702, "column": 4, "severity": "error", "message": "Module \"typing\" has no attribute \"_next_in_mro\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 702, 702], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 702, "column": 4, "severity": "error", "message": "Module \"typing\" has no attribute \"_type_check\"; maybe \"no_type_check\" or \"type_check_only\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 702, 702], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 708, "column": 4, "severity": "error", "message": "Name \"_ProtocolMeta\" already defined on line 524", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 708, 708], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 901, "column": 4, "severity": "error", "message": "Name \"Protocol\" already defined on line 515", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 901, 901], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 970, "column": 4, "severity": "error", "message": "Name \"SupportsIndex\" already defined on line 966", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 970, 970], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1137, "column": 26, "severity": "error", "message": "Name \"typing._GenericAlias\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1137, "column": 26, "severity": "error", "message": "Name \"typing._GenericAlias\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1137, "column": 26, "severity": "error", "message": "Name \"typing._GenericAlias\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1137, "column": 26, "severity": "error", "message": "Name \"typing._GenericAlias\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1137, "column": 4, "severity": "error", "message": "Name \"_AnnotatedAlias\" already defined on line 1134", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": null, "line": 1137, "column": 26, "severity": "error", "message": "Class cannot subclass \"_GenericAlias\" (has type \"Any\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1176, "column": 4, "severity": "error", "message": "Name \"Annotated\" already defined on line 1130", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1176, 1176], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1290, "column": 24, "severity": "error", "message": "Name \"typing.GenericMeta\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1290, 1290], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1290, "column": 24, "severity": "error", "message": "Name \"typing.GenericMeta\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1290, 1290], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1290, "column": 24, "severity": "error", "message": "Name \"typing.GenericMeta\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1290, 1290], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1290, "column": 24, "severity": "error", "message": "Name \"typing.GenericMeta\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1290, 1290], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": null, "line": 1290, "column": 24, "severity": "error", "message": "Class cannot subclass \"GenericMeta\" (has type \"Any\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1290, 1290], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1388, "column": 4, "severity": "error", "message": "Name \"Annotated\" already defined on line 1130", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1388, 1388], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1574, "column": 4, "severity": "error", "message": "Name \"ParamSpecArgs\" already defined on line 1560", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1574, 1574], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1592, "column": 4, "severity": "error", "message": "Name \"ParamSpecKwargs\" already defined on line 1561", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1592, 1592], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1617, "column": 20, "severity": "error", "message": "Missing type parameters for generic type \"list\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "type-arg", "description": "Check that generic type arguments are present", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1617, 1617], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1617, "column": 4, "severity": "error", "message": "Name \"ParamSpec\" already defined on line 1612", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1617, 1617], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1725, "column": 35, "severity": "error", "message": "Missing type parameters for generic type \"list\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "type-arg", "description": "Check that generic type arguments are present", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1725, 1725], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1786, "column": 4, "severity": "error", "message": "Cannot assign to a type", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1786, 1786], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2058, "column": 23, "severity": "error", "message": "Name \"typing._Final\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2058, 2058], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2058, "column": 23, "severity": "error", "message": "Name \"typing._Final\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2058, 2058], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2058, "column": 23, "severity": "error", "message": "Name \"typing._Final\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2058, 2058], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2058, "column": 23, "severity": "error", "message": "Name \"typing._Final\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2058, 2058], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": null, "line": 2058, "column": 23, "severity": "error", "message": "Class cannot subclass \"_Final\" (has type \"Any\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2058, 2058], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 17, "column": 4, "severity": "error", "message": "Module \"typing\" has no attribute \"GenericMeta\"; maybe \"Generic\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 17, 17], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 17, "column": 4, "severity": "error", "message": "Name \"GenericMeta\" already defined on line 14", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 17, 17], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 17, "column": 4, "severity": "error", "message": "Module \"typing\" has no attribute \"_type_vars\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 17, 17], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 96, "column": 20, "severity": "error", "message": "Name \"typing._FinalTypingBase\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 96, 96], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 96, "column": 20, "severity": "error", "message": "Name \"typing._FinalTypingBase\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 96, 96], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 96, "column": 20, "severity": "error", "message": "Name \"typing._FinalTypingBase\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 96, 96], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 96, "column": 20, "severity": "error", "message": "Name \"typing._FinalTypingBase\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 96, 96], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_NoReturn", "function_or_member": null, "line": 96, "column": 20, "severity": "error", "message": "Class cannot subclass \"_FinalTypingBase\" (has type \"Any\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 96, 96], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 372, "column": 16, "severity": "error", "message": "Missing type parameters for generic type \"deque\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "type-arg", "description": "Check that generic type arguments are present", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 372, 372], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 372, "column": 4, "severity": "error", "message": "Name \"Deque\" already defined on line 369", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 372, 372], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 388, "column": 4, "severity": "error", "message": "Module \"_collections_abc\" has no attribute \"_check_methods\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 388, 388], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 391, "column": 4, "severity": "error", "message": "Name \"AsyncContextManager\" already defined on line 385", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 391, 391], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 417, "column": 22, "severity": "error", "message": "Missing type parameters for generic type \"OrderedDict\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "type-arg", "description": "Check that generic type arguments are present", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 417, 417], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 417, "column": 4, "severity": "error", "message": "Name \"OrderedDict\" already defined (possibly by an import)", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 417, 417], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 433, "column": 18, "severity": "error", "message": "Missing type parameters for generic type \"Counter\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "type-arg", "description": "Check that generic type arguments are present", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 433, 433], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 433, "column": 4, "severity": "error", "message": "Name \"Counter\" already defined on line 430", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 433, 433], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 448, "column": 19, "severity": "error", "message": "Missing type parameters for generic type \"ChainMap\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "type-arg", "description": "Check that generic type arguments are present", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 448, 448], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 448, "column": 4, "severity": "error", "message": "Name \"ChainMap\" already defined on line 446", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 448, 448], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 464, "column": 4, "severity": "error", "message": "Name \"AsyncGenerator\" already defined on line 461", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 464, 464], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 518, "column": 4, "severity": "error", "message": "Module \"typing\" has no attribute \"_collect_type_vars\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 518, 518], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 542, "column": 4, "severity": "error", "message": "Name \"Protocol\" already defined on line 515", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 542, 542], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 702, "column": 4, "severity": "error", "message": "Module \"typing\" has no attribute \"_next_in_mro\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 702, 702], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 702, "column": 4, "severity": "error", "message": "Module \"typing\" has no attribute \"_type_check\"; maybe \"no_type_check\" or \"type_check_only\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 702, 702], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 708, "column": 4, "severity": "error", "message": "Name \"_ProtocolMeta\" already defined on line 524", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 708, 708], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 901, "column": 4, "severity": "error", "message": "Name \"Protocol\" already defined on line 515", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 901, 901], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 970, "column": 4, "severity": "error", "message": "Name \"SupportsIndex\" already defined on line 966", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 970, 970], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1137, "column": 26, "severity": "error", "message": "Name \"typing._GenericAlias\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1137, "column": 26, "severity": "error", "message": "Name \"typing._GenericAlias\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1137, "column": 26, "severity": "error", "message": "Name \"typing._GenericAlias\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1137, "column": 26, "severity": "error", "message": "Name \"typing._GenericAlias\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1137, "column": 4, "severity": "error", "message": "Name \"_AnnotatedAlias\" already defined on line 1134", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": null, "line": 1137, "column": 26, "severity": "error", "message": "Class cannot subclass \"_GenericAlias\" (has type \"Any\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1176, "column": 4, "severity": "error", "message": "Name \"Annotated\" already defined on line 1130", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1176, 1176], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1290, "column": 24, "severity": "error", "message": "Name \"typing.GenericMeta\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1290, 1290], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1290, "column": 24, "severity": "error", "message": "Name \"typing.GenericMeta\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1290, 1290], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1290, "column": 24, "severity": "error", "message": "Name \"typing.GenericMeta\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1290, 1290], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1290, "column": 24, "severity": "error", "message": "Name \"typing.GenericMeta\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1290, 1290], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": null, "line": 1290, "column": 24, "severity": "error", "message": "Class cannot subclass \"GenericMeta\" (has type \"Any\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1290, 1290], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1388, "column": 4, "severity": "error", "message": "Name \"Annotated\" already defined on line 1130", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1388, 1388], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1574, "column": 4, "severity": "error", "message": "Name \"ParamSpecArgs\" already defined on line 1560", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1574, 1574], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1592, "column": 4, "severity": "error", "message": "Name \"ParamSpecKwargs\" already defined on line 1561", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1592, 1592], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1617, "column": 20, "severity": "error", "message": "Missing type parameters for generic type \"list\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "type-arg", "description": "Check that generic type arguments are present", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1617, 1617], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1617, "column": 4, "severity": "error", "message": "Name \"ParamSpec\" already defined on line 1612", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-redef", "description": "Check that each name is defined once", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1617, 1617], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1725, "column": 35, "severity": "error", "message": "Missing type parameters for generic type \"list\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "type-arg", "description": "Check that generic type arguments are present", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1725, 1725], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2058, "column": 23, "severity": "error", "message": "Name \"typing._Final\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2058, 2058], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2058, "column": 23, "severity": "error", "message": "Name \"typing._Final\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2058, 2058], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2058, "column": 23, "severity": "error", "message": "Name \"typing._Final\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2058, 2058], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2058, "column": 23, "severity": "error", "message": "Name \"typing._Final\" is not defined", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "name-defined", "description": "Check that name is defined", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2058, 2058], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": null, "line": 2058, "column": 23, "severity": "error", "message": "Class cannot subclass \"_Final\" (has type \"Any\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2058, 2058], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 14, "column": 18, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 14, 14], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 14, "column": 18, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 14, 14], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_slots_copy", "line": 23, "column": 0, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 23, 23], "target": "typing_extensions._no_slots_copy"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_slots_copy", "line": 24, "column": 21, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 24, 24], "target": "typing_extensions._no_slots_copy"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_slots_copy", "line": 24, "column": 21, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 24, 24], "target": "typing_extensions._no_slots_copy"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_slots_copy", "line": 24, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 24, 24], "target": "typing_extensions._no_slots_copy"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_slots_copy", "line": 25, "column": 22, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 25, 25], "target": "typing_extensions._no_slots_copy"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_slots_copy", "line": 26, "column": 20, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 26, 26], "target": "typing_extensions._no_slots_copy"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_slots_copy", "line": 26, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 26, 26], "target": "typing_extensions._no_slots_copy"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_slots_copy", "line": 26, "column": 8, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 26, 26], "target": "typing_extensions._no_slots_copy"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_slots_copy", "line": 27, "column": 12, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 27, 27], "target": "typing_extensions._no_slots_copy"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_slots_copy", "line": 27, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 27, 27], "target": "typing_extensions._no_slots_copy"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_slots_copy", "line": 27, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 27, 27], "target": "typing_extensions._no_slots_copy"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_slots_copy", "line": 28, "column": 11, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 28, 28], "target": "typing_extensions._no_slots_copy"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_check_generic", "line": 31, "column": 0, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 31, 31], "target": "typing_extensions._check_generic"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_check_generic", "line": 32, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 32, 32], "target": "typing_extensions._check_generic"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_check_generic", "line": 32, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 32, 32], "target": "typing_extensions._check_generic"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_check_generic", "line": 33, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 33, 33], "target": "typing_extensions._check_generic"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_check_generic", "line": 34, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 34, 34], "target": "typing_extensions._check_generic"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_check_generic", "line": 35, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 35, 35], "target": "typing_extensions._check_generic"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_check_generic", "line": 35, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 35, 35], "target": "typing_extensions._check_generic"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_check_generic", "line": 37, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 37, 37], "target": "typing_extensions._check_generic"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_NoReturn", "function_or_member": "__instancecheck__", "line": 110, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 110, 110], "target": "typing_extensions._NoReturn.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_NoReturn", "function_or_member": "__subclasscheck__", "line": 113, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 113, 113], "target": "typing_extensions._NoReturn.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_NoReturn", "function_or_member": null, "line": 96, "column": 4, "severity": "error", "message": "Unexpected keyword argument \"_root\" for \"__init_subclass__\" of \"object\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 96, 96], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "/.venv/lib/site-packages/mypy/typeshed/stdlib/builtins.pyi", "module": "typing_extensions", "type": "_NoReturn", "function_or_member": null, "line": 111, "column": 4, "severity": "note", "message": "\"__init_subclass__\" of \"object\" defined here", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 96, 96], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__repr__", "line": 136, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 136, 136], "target": "typing_extensions._FinalForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__repr__", "line": 137, "column": 42, "severity": "error", "message": "\"_FinalForm\" has no attribute \"_name\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 137, 137], "target": "typing_extensions._FinalForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__repr__", "line": 137, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 137, 137], "target": "typing_extensions._FinalForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__repr__", "line": 137, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 137, 137], "target": "typing_extensions._FinalForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__getitem__", "line": 139, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 139, 139], "target": "typing_extensions._FinalForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__getitem__", "line": 140, "column": 19, "severity": "error", "message": "Module has no attribute \"_type_check\"; maybe \"no_type_check\" or \"type_check_only\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 140, 140], "target": "typing_extensions._FinalForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__getitem__", "line": 140, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 140, 140], "target": "typing_extensions._FinalForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__getitem__", "line": 141, "column": 38, "severity": "error", "message": "\"_FinalForm\" has no attribute \"_name\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 141, 141], "target": "typing_extensions._FinalForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__getitem__", "line": 141, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 141, 141], "target": "typing_extensions._FinalForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__getitem__", "line": 140, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 140, 141], "target": "typing_extensions._FinalForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__getitem__", "line": 142, "column": 19, "severity": "error", "message": "Module has no attribute \"_GenericAlias\"; maybe \"GenericAlias\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 142, 142], "target": "typing_extensions._FinalForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__getitem__", "line": 142, "column": 47, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 142, 142], "target": "typing_extensions._FinalForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__getitem__", "line": 142, "column": 46, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 142, 142], "target": "typing_extensions._FinalForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": "__getitem__", "line": 142, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 142, 142], "target": "typing_extensions._FinalForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": null, "line": 134, "column": 4, "severity": "error", "message": "Unexpected keyword argument \"_root\" for \"__init_subclass__\" of \"object\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 134, 134], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "/.venv/lib/site-packages/mypy/typeshed/stdlib/builtins.pyi", "module": "typing_extensions", "type": "_FinalForm", "function_or_member": null, "line": 111, "column": 4, "severity": "note", "message": "\"__init_subclass__\" of \"object\" defined here", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 134, 134], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 144, "column": 12, "severity": "error", "message": "Too many arguments for \"_FinalForm\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 144, 157], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 144, "column": 12, "severity": "error", "message": "Unexpected keyword argument \"doc\" for \"_FinalForm\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 144, 157], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "/.venv/lib/site-packages/mypy/typeshed/stdlib/builtins.pyi", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 93, "column": 4, "severity": "note", "message": "\"_FinalForm\" defined here", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 144, 157], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "final", "line": 219, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 219, 219], "target": "typing_extensions.final"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "final", "line": 239, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 239, 239], "target": "typing_extensions.final"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "IntVar", "line": 242, "column": 0, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 242, 242], "target": "typing_extensions.IntVar"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "IntVar", "line": 244, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 244, 244], "target": "typing_extensions.IntVar"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_LiteralForm", "function_or_member": "__repr__", "line": 254, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 254, 254], "target": "typing_extensions._LiteralForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_LiteralForm", "function_or_member": "__repr__", "line": 255, "column": 42, "severity": "error", "message": "\"_LiteralForm\" has no attribute \"_name\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 255, 255], "target": "typing_extensions._LiteralForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_LiteralForm", "function_or_member": "__repr__", "line": 255, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 255, 255], "target": "typing_extensions._LiteralForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_LiteralForm", "function_or_member": "__repr__", "line": 255, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 255, 255], "target": "typing_extensions._LiteralForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_LiteralForm", "function_or_member": "__getitem__", "line": 257, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 257, 257], "target": "typing_extensions._LiteralForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_LiteralForm", "function_or_member": "__getitem__", "line": 258, "column": 19, "severity": "error", "message": "Module has no attribute \"_GenericAlias\"; maybe \"GenericAlias\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 258, 258], "target": "typing_extensions._LiteralForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_LiteralForm", "function_or_member": "__getitem__", "line": 258, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 258, 258], "target": "typing_extensions._LiteralForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_LiteralForm", "function_or_member": "__getitem__", "line": 258, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 258, 258], "target": "typing_extensions._LiteralForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_LiteralForm", "function_or_member": null, "line": 252, "column": 4, "severity": "error", "message": "Unexpected keyword argument \"_root\" for \"__init_subclass__\" of \"object\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 252, 252], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "/.venv/lib/site-packages/mypy/typeshed/stdlib/builtins.pyi", "module": "typing_extensions", "type": "_LiteralForm", "function_or_member": null, "line": 111, "column": 4, "severity": "note", "message": "\"__init_subclass__\" of \"object\" defined here", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 252, 252], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 260, "column": 14, "severity": "error", "message": "Too many arguments for \"_LiteralForm\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 260, 272], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 260, "column": 14, "severity": "error", "message": "Unexpected keyword argument \"doc\" for \"_LiteralForm\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 260, 272], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "/.venv/lib/site-packages/mypy/typeshed/stdlib/builtins.pyi", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 93, "column": 4, "severity": "note", "message": "\"_LiteralForm\" defined here", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 260, 272], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 324, "column": 18, "severity": "error", "message": "Module has no attribute \"_overload_dummy\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 324, 324], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 324, "column": 18, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 324, 324], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 325, "column": 11, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[_F], _F]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 325, 325], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 336, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 336, 336], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 342, "column": 11, "severity": "error", "message": "\"_ExtensionsGenericMeta\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 342, 342], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 342, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 342, 342], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 343, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 343, 343], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 343, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 343, 343], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 343, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 343, 343], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 343, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 343, 343], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 347, "column": 15, "severity": "error", "message": "\"_ExtensionsGenericMeta\" has no attribute \"__extra__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 347, 347], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 347, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 347, 347], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 348, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 348, 348], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 349, "column": 14, "severity": "error", "message": "\"_ExtensionsGenericMeta\" has no attribute \"__extra__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 349, 349], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 349, "column": 14, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 349, 349], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 349, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 349, 349], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 349, "column": 14, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 349, 349], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 350, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 350, 350], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 351, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 351, 351], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 352, "column": 11, "severity": "error", "message": "\"_ExtensionsGenericMeta\" has no attribute \"__extra__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 352, 352], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 352, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 352, 352], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 352, "column": 29, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 352, 352], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 352, "column": 29, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 352, 352], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 352, "column": 11, "severity": "error", "message": "\"_ExtensionsGenericMeta\" has no attribute \"__extra__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 352, 352], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 352, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 352, 352], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 354, "column": 20, "severity": "error", "message": "\"_ExtensionsGenericMeta\" has no attribute \"__extra__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 354, 354], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 354, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 354, 354], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 354, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 354, 354], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 354, "column": 8, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 354, 354], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 355, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 355, 355], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 355, "column": 32, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 355, 355], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 357, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 357, 357], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsGenericMeta", "function_or_member": "__subclasscheck__", "line": 357, "column": 36, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 357, 357], "target": "typing_extensions._ExtensionsGenericMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Deque", "function_or_member": "__new__", "line": 377, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 377, 377], "target": "typing_extensions.Deque.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Deque", "function_or_member": "__new__", "line": 378, "column": 15, "severity": "error", "message": "\"Type[Deque[T]]\" has no attribute \"_gorg\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 378, 378], "target": "typing_extensions.Deque.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Deque", "function_or_member": "__new__", "line": 378, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 378, 378], "target": "typing_extensions.Deque.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Deque", "function_or_member": "__new__", "line": 379, "column": 42, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 379, 379], "target": "typing_extensions.Deque.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Deque", "function_or_member": "__new__", "line": 379, "column": 50, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 379, 379], "target": "typing_extensions.Deque.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Deque", "function_or_member": "__new__", "line": 379, "column": 42, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 379, 379], "target": "typing_extensions.Deque.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Deque", "function_or_member": "__new__", "line": 379, "column": 50, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 379, 379], "target": "typing_extensions.Deque.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Deque", "function_or_member": "__new__", "line": 379, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"deque[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 379, 379], "target": "typing_extensions.Deque.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Deque", "function_or_member": "__new__", "line": 380, "column": 19, "severity": "error", "message": "Module has no attribute \"_generic_new\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 380, 380], "target": "typing_extensions.Deque.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Deque", "function_or_member": "__new__", "line": 380, "column": 64, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 380, 380], "target": "typing_extensions.Deque.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Deque", "function_or_member": "__new__", "line": 380, "column": 72, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 380, 380], "target": "typing_extensions.Deque.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Deque", "function_or_member": "__new__", "line": 380, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 380, 380], "target": "typing_extensions.Deque.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AsyncContextManager", "function_or_member": "__aenter__", "line": 394, "column": 8, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 394, 394], "target": "typing_extensions.AsyncContextManager.__aenter__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AsyncContextManager", "function_or_member": "__aexit__", "line": 398, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 398, 398], "target": "typing_extensions.AsyncContextManager.__aexit__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AsyncContextManager", "function_or_member": null, "line": 398, "column": 8, "severity": "error", "message": "Type of decorated function contains type \"Any\" (\"Callable[[AsyncContextManager[T_co], Any, Any, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 398, 398], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AsyncContextManager", "function_or_member": "__subclasshook__", "line": 402, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 402, 402], "target": "typing_extensions.AsyncContextManager.__subclasshook__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AsyncContextManager", "function_or_member": "__subclasshook__", "line": 404, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 404, 404], "target": "typing_extensions.AsyncContextManager.__subclasshook__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AsyncContextManager", "function_or_member": "__subclasshook__", "line": 404, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 404, 404], "target": "typing_extensions.AsyncContextManager.__subclasshook__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AsyncContextManager", "function_or_member": null, "line": 402, "column": 8, "severity": "error", "message": "Type of decorated function contains type \"Any\" (\"Callable[[Type[AsyncContextManager[T_co]], Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 402, 402], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 423, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 423, 423], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 424, "column": 15, "severity": "error", "message": "\"Type[OrderedDict[KT, VT]]\" has no attribute \"_gorg\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 424, 424], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 424, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 424, 424], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 425, "column": 48, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 425, 425], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 425, "column": 56, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 425, 425], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 425, "column": 48, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 425, 425], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 425, "column": 56, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 425, 425], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 425, "column": 48, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 425, 425], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 425, "column": 56, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 425, 425], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 425, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"OrderedDict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 425, 425], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 426, "column": 19, "severity": "error", "message": "Module has no attribute \"_generic_new\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 426, 426], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 426, "column": 70, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 426, 426], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 426, "column": 78, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 426, 426], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "OrderedDict", "function_or_member": "__new__", "line": 426, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 426, 426], "target": "typing_extensions.OrderedDict.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 439, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 439, 439], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 440, "column": 15, "severity": "error", "message": "\"Type[Counter[T]]\" has no attribute \"_gorg\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 440, 440], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 440, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 440, 440], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 441, "column": 44, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 441, 441], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 441, "column": 52, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 441, 441], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 441, "column": 44, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 441, 441], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 441, "column": 52, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 441, 441], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 441, "column": 44, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 441, 441], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 441, "column": 52, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 441, 441], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 441, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Counter[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 441, 441], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 442, "column": 19, "severity": "error", "message": "Module has no attribute \"_generic_new\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 442, 442], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 442, "column": 66, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 442, 442], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 442, "column": 74, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 442, 442], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Counter", "function_or_member": "__new__", "line": 442, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 442, 442], "target": "typing_extensions.Counter.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ChainMap", "function_or_member": "__new__", "line": 454, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 454, 454], "target": "typing_extensions.ChainMap.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ChainMap", "function_or_member": "__new__", "line": 455, "column": 15, "severity": "error", "message": "\"Type[ChainMap[KT, VT]]\" has no attribute \"_gorg\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 455, 455], "target": "typing_extensions.ChainMap.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ChainMap", "function_or_member": "__new__", "line": 455, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 455, 455], "target": "typing_extensions.ChainMap.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ChainMap", "function_or_member": "__new__", "line": 456, "column": 45, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 456, 456], "target": "typing_extensions.ChainMap.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ChainMap", "function_or_member": "__new__", "line": 456, "column": 53, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 456, 456], "target": "typing_extensions.ChainMap.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ChainMap", "function_or_member": "__new__", "line": 456, "column": 45, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 456, 456], "target": "typing_extensions.ChainMap.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ChainMap", "function_or_member": "__new__", "line": 456, "column": 53, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 456, 456], "target": "typing_extensions.ChainMap.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ChainMap", "function_or_member": "__new__", "line": 456, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"ChainMap[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 456, 456], "target": "typing_extensions.ChainMap.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ChainMap", "function_or_member": "__new__", "line": 457, "column": 19, "severity": "error", "message": "Module has no attribute \"_generic_new\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 457, 457], "target": "typing_extensions.ChainMap.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ChainMap", "function_or_member": "__new__", "line": 457, "column": 67, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 457, 457], "target": "typing_extensions.ChainMap.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ChainMap", "function_or_member": "__new__", "line": 457, "column": 75, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 457, 457], "target": "typing_extensions.ChainMap.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ChainMap", "function_or_member": "__new__", "line": 457, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 457, 457], "target": "typing_extensions.ChainMap.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 474, "column": 0, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 474, 474], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 476, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 476, 476], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 476, "column": 27, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 476, 476], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 478, "column": 15, "severity": "error", "message": "\"type\" has no attribute \"_gorg\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 478, 478], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 478, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 478, 478], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 479, "column": 10, "severity": "error", "message": "\"type\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 479, 479], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 479, "column": 10, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 479, 479], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 480, "column": 14, "severity": "error", "message": "\"type\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 480, 480], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 480, "column": 14, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 480, 480], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 479, "column": 10, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 479, 479], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 479, "column": 10, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 479, 479], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 480, "column": 14, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 480, 480], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 480, "column": 14, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 480, 480], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_gorg", "line": 481, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 481, 481], "target": "typing_extensions._gorg"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 490, "column": 0, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 490, 490], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 492, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 492, 492], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 492, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 492, 492], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 492, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 492, 492], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 492, "column": 4, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 492, 492], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 493, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 493, 493], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 493, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 493, 493], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 493, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 493, 493], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 493, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 493, 493], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 495, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 495, 495], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 495, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 495, 495], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 495, "column": 55, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 495, 495], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 495, "column": 22, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 495, 495], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 20, "severity": "error", "message": "Expression type contains \"Any\" (has type \"List[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 54, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 54, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, dict_keys[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 49, "severity": "error", "message": "Expression type contains \"Any\" (has type \"List[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 54, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 54, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, dict_keys[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 49, "severity": "error", "message": "Expression type contains \"Any\" (has type \"List[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 20, "severity": "error", "message": "Expression type contains \"Any\" (has type \"List[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 496, "column": 8, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 496, 496], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 497, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 497, 497], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 497, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 497, 497], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 497, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 497, 497], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 497, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 497, 497], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 497, "column": 49, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 497, 497], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 497, "column": 49, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 497, 497], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 505, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 505, 505], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 505, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 505, 505], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 505, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 505, 505], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_get_protocol_attrs", "line": 506, "column": 11, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 506, 506], "target": "typing_extensions._get_protocol_attrs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_callable_members_only", "line": 509, "column": 0, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 509, 509], "target": "typing_extensions._is_callable_members_only"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_callable_members_only", "line": 510, "column": 62, "severity": "error", "message": "Call to untyped function \"_get_protocol_attrs\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 510, 510], "target": "typing_extensions._is_callable_members_only"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_callable_members_only", "line": 510, "column": 82, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 510, 510], "target": "typing_extensions._is_callable_members_only"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_callable_members_only", "line": 510, "column": 62, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 510, 510], "target": "typing_extensions._is_callable_members_only"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_callable_members_only", "line": 510, "column": 14, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 510, 510], "target": "typing_extensions._is_callable_members_only"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_callable_members_only", "line": 510, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 510, 510], "target": "typing_extensions._is_callable_members_only"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_callable_members_only", "line": 510, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 510, 510], "target": "typing_extensions._is_callable_members_only"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_callable_members_only", "line": 510, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 510, 510], "target": "typing_extensions._is_callable_members_only"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_callable_members_only", "line": 510, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 510, 510], "target": "typing_extensions._is_callable_members_only"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_callable_members_only", "line": 510, "column": 24, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 510, 510], "target": "typing_extensions._is_callable_members_only"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_init", "line": 520, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 520, 520], "target": "typing_extensions._no_init"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_init", "line": 521, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 521, 521], "target": "typing_extensions._no_init"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_init", "line": 521, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 521, 521], "target": "typing_extensions._no_init"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_init", "line": 521, "column": 11, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 521, 521], "target": "typing_extensions._no_init"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_init", "line": 521, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 521, 521], "target": "typing_extensions._no_init"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 527, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 527, 527], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 530, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 530, 530], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 530, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 530, 530], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 531, "column": 17, "severity": "error", "message": "Call to untyped function \"_is_callable_members_only\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 531, 531], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 531, "column": 17, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 531, 531], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 530, "column": 17, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[True], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 530, 531], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 530, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 530, 530], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 530, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 530, 530], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 531, "column": 17, "severity": "error", "message": "Call to untyped function \"_is_callable_members_only\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 531, 531], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 531, "column": 17, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 531, 531], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 530, "column": 17, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[True], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 530, 531], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 532, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 532, 532], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 532, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 532, 532], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 530, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 530, 532], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 534, "column": 15, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"_is_protocol\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 534, 534], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 534, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 534, 534], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 538, "column": 35, "severity": "error", "message": "Call to untyped function \"_get_protocol_attrs\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 538, 538], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 538, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 538, 538], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 535, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 535, 535], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 535, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 535, 535], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 535, "column": 41, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 535, 535], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 535, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 535, 535], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 535, "column": 41, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 535, 535], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 536, "column": 50, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 536, 536], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 536, "column": 50, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 536, 536], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 536, "column": 37, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 536, 536], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 536, "column": 50, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 536, 536], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 536, "column": 50, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 536, 536], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 536, "column": 37, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 536, 536], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 537, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 537, 537], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 537, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 537, 537], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 537, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 537, 537], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 537, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 537, 537], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 537, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 537, 537], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 540, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 540, 540], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 540, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 540, 540], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__new__", "line": 577, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 577, 577], "target": "typing_extensions.Protocol.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__new__", "line": 578, "column": 15, "severity": "error", "message": "Non-overlapping identity check (left operand type: \"Type[Protocol]\", right operand type: \"_SpecialForm\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "comparison-overlap", "description": "Check that types in comparisons and 'in' expressions overlap", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 578, 578], "target": "typing_extensions.Protocol.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 584, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 584, 584], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 585, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 585, 585], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 586, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 586, 586], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 586, "column": 25, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 586, 586], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 587, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 587, 587], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 587, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 587, 587], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 587, "column": 30, "severity": "error", "message": "Non-overlapping identity check (left operand type: \"Type[Protocol]\", right operand type: \"_SpecialForm\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "comparison-overlap", "description": "Check that types in comparisons and 'in' expressions overlap", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 587, 587], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 591, "column": 63, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 591, 591], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 591, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 591, 591], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 591, "column": 27, "severity": "error", "message": "Module has no attribute \"_type_check\"; maybe \"no_type_check\" or \"type_check_only\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 591, 591], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 591, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 591, 591], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 591, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 591, 591], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 591, "column": 26, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 591, 591], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 591, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 591, 591], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 592, "column": 15, "severity": "error", "message": "Non-overlapping identity check (left operand type: \"Type[Protocol]\", right operand type: \"_SpecialForm\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "comparison-overlap", "description": "Check that types in comparisons and 'in' expressions overlap", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 592, 592], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 594, "column": 66, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 594, 594], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 594, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 594, 594], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 594, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 594, 594], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 594, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[TypeVar]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 594, 594], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 596, "column": 37, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 596, 596], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 596, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 596, 596], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 596, "column": 48, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[TypeVar]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 596, 596], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 600, "column": 49, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 600, 600], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 599, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 599, 600], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 601, "column": 27, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 601, 601], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 601, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 601, 601], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 601, "column": 43, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 601, 601], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 601, "column": 43, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 601, 601], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 606, "column": 16, "severity": "error", "message": "Call to untyped function \"_check_generic\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 606, 606], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 606, "column": 36, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 606, 606], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 607, "column": 19, "severity": "error", "message": "Module has no attribute \"_GenericAlias\"; maybe \"GenericAlias\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 607, 607], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 607, "column": 45, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 607, 607], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__class_getitem__", "line": 607, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 607, 607], "target": "typing_extensions.Protocol.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": null, "line": 583, "column": 9, "severity": "error", "message": "Module has no attribute \"_tp_cache\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 583, 583], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": null, "line": 583, "column": 9, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 583, 583], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": null, "line": 583, "column": 9, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Type[Protocol], Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 583, 583], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": null, "line": 584, "column": 8, "severity": "error", "message": "Function is untyped after decorator transformation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 584, 584], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 609, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 609, 609], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 611, "column": 35, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 611, 611], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 612, "column": 42, "severity": "error", "message": "\"Type[Protocol]\" has no attribute \"__orig_bases__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 612, 612], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 612, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 612, 612], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 614, "column": 24, "severity": "error", "message": "Non-overlapping container check (element type: \"_SpecialForm\", container item type: \"type\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "comparison-overlap", "description": "Check that types in comparisons and 'in' expressions overlap", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 614, 614], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 617, "column": 35, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 617, 617], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 618, "column": 43, "severity": "error", "message": "\"Type[Protocol]\" has no attribute \"__orig_bases__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 618, 618], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 618, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 618, 618], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 618, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 618, 618], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 618, "column": 43, "severity": "error", "message": "\"Type[Protocol]\" has no attribute \"__orig_bases__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 618, 618], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 618, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 618, 618], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 625, "column": 28, "severity": "error", "message": "\"Type[Protocol]\" has no attribute \"__orig_bases__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 625, 625], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 625, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 625, 625], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 625, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 625, 625], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 626, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 626, 626], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 626, "column": 41, "severity": "error", "message": "Module has no attribute \"_GenericAlias\"; maybe \"GenericAlias\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 626, 626], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 626, "column": 41, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 626, 626], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 626, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 626, 626], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 626, "column": 41, "severity": "error", "message": "Module has no attribute \"_GenericAlias\"; maybe \"GenericAlias\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 626, 626], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 626, "column": 41, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 626, 626], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 627, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 627, 627], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 627, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 627, 627], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 627, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 627, 627], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 627, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 627, 627], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 629, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 629, 629], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 629, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 629, 629], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 629, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 629, 629], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 634, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 634, 634], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 634, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 634, 634], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 635, "column": 19, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 635, 635], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 638, "column": 30, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 638, 638], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 639, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 639, 639], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 639, "column": 30, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 639, 639], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 640, "column": 27, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 640, 640], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 640, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 640, 640], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 640, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 640, 640], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 641, "column": 77, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 641, 641], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 642, "column": 59, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 642, 642], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 642, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 642, 642], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 642, "column": 47, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 642, 642], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 642, "column": 47, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 642, 642], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 643, "column": 40, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 643, 644], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 646, "column": 12, "severity": "error", "message": "\"Type[Protocol]\" has no attribute \"__parameters__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 646, 646], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 646, "column": 33, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 646, 646], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 649, "column": 19, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 649, 649], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 649, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 649, 649], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 650, "column": 39, "severity": "error", "message": "Non-overlapping identity check (left operand type: \"type\", right operand type: \"_SpecialForm\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "comparison-overlap", "description": "Check that types in comparisons and 'in' expressions overlap", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 650, 650], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 653, "column": 12, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 653, 653], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 654, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 654, 654], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 654, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 654, 654], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 656, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 656, 656], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 657, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 657, 657], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 657, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 657, 657], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 657, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 657, 657], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 657, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 657, 657], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 661, "column": 23, "severity": "error", "message": "Call to untyped function \"_is_callable_members_only\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 661, 661], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 661, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 661, 661], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 662, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 662, 662], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 662, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 662, 662], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 662, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 662, 662], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 662, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 662, 662], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 666, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 666, 666], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 666, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 666, 666], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 669, "column": 28, "severity": "error", "message": "Call to untyped function \"_get_protocol_attrs\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 669, 669], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 669, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 669, 669], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 669, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 669, 669], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 671, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 671, 671], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 671, "column": 35, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 671, 671], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 671, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 671, 671], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 672, "column": 31, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 672, 672], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 672, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 672, 672], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 672, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 672, 672], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 672, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 672, 672], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 675, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[<nothing>, <nothing>]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 675, 675], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 675, "column": 38, "severity": "error", "message": "Need type annotation for \"annotations\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "var-annotated", "description": "Require variable annotation if type can't be inferred", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 675, 675], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 676, "column": 39, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 676, 676], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 676, "column": 39, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 676, 676], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 677, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 677, 677], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 677, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 677, 677], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 677, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 677, 677], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 677, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 677, 677], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 678, "column": 50, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 678, 678], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 678, "column": 50, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 678, 678], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 679, "column": 32, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"_is_protocol\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 679, 679], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 679, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 679, 679], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 676, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 676, 679], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 676, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 676, 679], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 676, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 676, 679], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 670, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 670, 670], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 670, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 670, 670], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 670, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 670, 670], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 671, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 671, 671], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 671, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 671, 671], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 671, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 671, 671], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 671, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 671, 671], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 672, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 672, 672], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 672, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 672, 672], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 672, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 672, 672], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 672, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 672, 672], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 672, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 672, 672], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 675, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 675, 675], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 675, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 675, 675], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 675, "column": 71, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 675, 675], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 675, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 675, 675], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 676, "column": 39, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 676, 676], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 676, "column": 39, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 676, 676], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 677, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 677, 677], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 677, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 677, 677], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 677, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 677, 677], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 677, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 677, 677], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 678, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 678, 678], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 678, "column": 50, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 678, 678], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 678, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 678, 678], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 678, "column": 50, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 678, 678], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 679, "column": 32, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"_is_protocol\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 679, 679], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 679, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 679, 679], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 676, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 676, 679], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 676, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 676, 679], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init_subclass__", "line": 676, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 676, 679], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 684, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 684, 684], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 685, "column": 16, "severity": "error", "message": "\"Type[Protocol]\" has no attribute \"__subclasshook__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 685, 685], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 685, "column": 39, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 685, 685], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 693, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 693, 693], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 693, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 693, 693], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 693, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 693, 693], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 693, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 693, 693], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 694], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 694], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 694], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 694], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 694], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 694], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 695, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 695, 695], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 695, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 695, 695], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 695, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 695, 695], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 695, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 695, 695], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 695], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 694], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 694], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 694], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 694], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 694], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 694], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 695, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 695, 695], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 695, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 695, 695], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 695, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 695, 695], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 695, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 695, 695], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 694, "column": 24, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 694, 695], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 696, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 696, 696], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 696, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 696, 696], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 696, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 696, 696], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 696, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 696, 696], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 696, "column": 60, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"_is_protocol\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 696, 696], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 696, "column": 60, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 696, 696], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 696, "column": 24, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 696, 696], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 693, "column": 24, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 693, 696], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 693, "column": 24, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 693, 696], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 698, "column": 60, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 698, 698], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__init_subclass__", "line": 699, "column": 12, "severity": "error", "message": "Cannot assign to a method", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "assignment", "description": "Check that assigned value is compatible with target", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 699, 699], "target": "typing_extensions.Protocol.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_init", "line": 704, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 704, 704], "target": "typing_extensions._no_init"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_init", "line": 705, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 705, 705], "target": "typing_extensions._no_init"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_init", "line": 705, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 705, 705], "target": "typing_extensions._no_init"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_init", "line": 705, "column": 11, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 705, 705], "target": "typing_extensions._no_init"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_no_init", "line": 705, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 705, 705], "target": "typing_extensions._no_init"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 714, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 714, 714], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 718, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 718, 718], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 719, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 719, 719], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 720, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 720, 720], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 721, "column": 66, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 721, 721], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 721, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 721, 721], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 721, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 721, 721], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 721, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[TypeVar]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 721, 721], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 721, "column": 74, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 721, 721], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 723, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 723, 723], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 723, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 723, 723], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 725, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 725, 725], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 725, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 725, 725], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 726, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 726, 726], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 728, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 728, 728], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 728, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 728, 728], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 728, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 728, 728], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 728, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 728, 728], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 729, "column": 28, "severity": "error", "message": "\"type\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 729, 729], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 729, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 729, 729], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 729, "column": 28, "severity": "error", "message": "\"type\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 729, 729], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 729, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 729, 729], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 734, "column": 32, "severity": "error", "message": "\"type\" has no attribute \"__parameters__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 734, 734], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 734, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 734, 734], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 735, "column": 19, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 735, 735], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 738, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 738, 738], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 738, "column": 30, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 738, 738], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 739, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 739, 739], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 739, "column": 30, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 739, 739], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 740, "column": 27, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 740, 740], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 740, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 740, 740], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 740, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 740, 740], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 741, "column": 59, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 741, 741], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 741, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 741, 741], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 741, "column": 68, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 741, 741], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 741, "column": 77, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 741, 741], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 741, "column": 68, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 741, 741], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 741, "column": 47, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 741, 741], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 741, "column": 47, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 741, 741], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 742, "column": 59, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 742, 742], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 742, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 742, 742], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 742, "column": 47, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 742, 742], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 742, "column": 47, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 742, 742], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 744, "column": 61, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 744, 744], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 743, "column": 51, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 743, 743], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 743, "column": 52, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 743, 743], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 743, "column": 52, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 743, 743], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 747, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 747, 747], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 749, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 749, 749], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 750, "column": 16, "severity": "error", "message": "Right operand of \"and\" is never evaluated", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "unreachable", "description": "Warn about unreachable statements or expressions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 750, 751], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 752, "column": 16, "severity": "error", "message": "Statement is unreachable", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "unreachable", "description": "Warn about unreachable statements or expressions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 752, 752], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 754, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 754, 754], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 753, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 753, 753], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 753, "column": 49, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 753, 753], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 753, "column": 52, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 753, 753], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 753, "column": 26, "severity": "error", "message": "Call to untyped function \"_gorg\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 753, 753], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 753, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 753, 753], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 753, "column": 70, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 753, 753], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 753, "column": 70, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 753, 753], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 753, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 753, 753], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 753, "column": 25, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 753, 754], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 753, "column": 20, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 753, 754], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 755, "column": 83, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 755, 755], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 755, "column": 18, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 755, 755], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 755, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 755, 755], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 755, "column": 33, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 755, 755], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 755, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 755, 755], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 755, "column": 33, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 755, 755], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 755, "column": 50, "severity": "error", "message": "Non-overlapping identity check (left operand type: \"type\", right operand type: \"_SpecialForm\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "comparison-overlap", "description": "Check that types in comparisons and 'in' expressions overlap", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 755, 755], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 756, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 756, 756], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 756, "column": 29, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 756, 756], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 756, "column": 50, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 756, 756], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 756, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 756, 756], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 756, "column": 29, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 756, 756], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 757, "column": 12, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 757, 757], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 757, "column": 44, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 757, 757], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 757, "column": 44, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 757, 757], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 757, "column": 30, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 757, 757], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 757, "column": 29, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 757, 757], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 758, "column": 25, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 758, 758], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 758, "column": 56, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 758, 758], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 758, "column": 62, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 758, 758], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 758, "column": 69, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 758, 758], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 758, "column": 19, "severity": "error", "message": "Too many arguments for \"__new__\" of \"object\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 758, 759], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 758, "column": 19, "severity": "error", "message": "Too many arguments for \"__new__\" of \"object\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 758, 759], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 758, "column": 19, "severity": "error", "message": "Too many arguments for \"__new__\" of \"object\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 758, 759], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 758, "column": 19, "severity": "error", "message": "Unexpected keyword argument \"_root\" for \"__new__\" of \"object\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 758, 759], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "/.venv/lib/site-packages/mypy/typeshed/stdlib/builtins.pyi", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 94, "column": 4, "severity": "note", "message": "\"__new__\" of \"object\" defined here", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 758, 759], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 760, "column": 18, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 760, 760], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 761, "column": 61, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 761, 761], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 762, "column": 49, "severity": "error", "message": "Call to untyped function \"_gorg\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 762, 762], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 762, "column": 55, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 762, 762], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 762, "column": 49, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 762, 762], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 762, "column": 49, "severity": "error", "message": "Call to untyped function \"_gorg\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 762, 762], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 762, "column": 55, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 762, 762], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 762, "column": 49, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 762, 762], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 761, "column": 49, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 761, 762], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 763, "column": 12, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__parameters__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 763, 763], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 763, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 763, 763], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 764, "column": 12, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__args__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 764, 764], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 766, "column": 54, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 766, 766], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 766, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 766, 766], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 764, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 764, 764], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 764, "column": 41, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 764, 764], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 764, "column": 46, "severity": "error", "message": "Module has no attribute \"_TypingEllipsis\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 764, 764], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 764, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 764, 764], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 765, "column": 40, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 765, 765], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 765, "column": 45, "severity": "error", "message": "Module has no attribute \"_TypingEmpty\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 765, 765], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 765, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 765, 765], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 766, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 766, 766], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 766, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 766, 766], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 765, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 765, 766], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 765, "column": 40, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 765, 765], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 765, "column": 45, "severity": "error", "message": "Module has no attribute \"_TypingEmpty\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 765, 765], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 765, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 765, 765], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 766, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 766, 766], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 766, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 766, 766], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 765, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 765, 766], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 764, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 764, 766], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 764, "column": 33, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 764, 766], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 764, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 764, 766], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 764, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Optional[Tuple[Any, ...]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 764, 766], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 767, "column": 12, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__next_in_mro__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 767, 767], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 767, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 767, 767], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 768, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 768, 768], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 769, "column": 16, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__orig_bases__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 769, 769], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 769, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 769, 769], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 770, "column": 17, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 770, 770], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 771, "column": 16, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"_abc_registry\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 771, 771], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 771, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 771, 771], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 771, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 771, 771], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 772, "column": 16, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"_abc_cache\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 772, 772], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 772, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 772, 772], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 772, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 772, 772], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 774, "column": 16, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__tree_hash__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 774, 774], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 774, "column": 65, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 774, 774], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 774, "column": 43, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"_subs_tree\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 774, 774], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 774, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 774, 774], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 775, "column": 44, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 775, 775], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__new__", "line": 775, "column": 44, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 775, 775], "target": "typing_extensions._ProtocolMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 778, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 778, 778], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 779, "column": 30, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 779, 779], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 779, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 779, 779], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 779, "column": 30, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 779, 779], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 779, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 779, 779], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 779, "column": 30, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 779, 779], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 779, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 779, 779], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 780, "column": 19, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 780, 780], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 780, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 780, 780], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 781, "column": 39, "severity": "error", "message": "Non-overlapping identity check (left operand type: \"type\", right operand type: \"_SpecialForm\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "comparison-overlap", "description": "Check that types in comparisons and 'in' expressions overlap", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 781, 781], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 781, "column": 39, "severity": "error", "message": "Non-overlapping identity check (left operand type: \"type\", right operand type: \"_SpecialForm\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "comparison-overlap", "description": "Check that types in comparisons and 'in' expressions overlap", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 781, 781], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 782, "column": 53, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 782, 782], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 782, "column": 53, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 782, 782], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 783, "column": 39, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 783, 783], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 783, "column": 39, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 783, 783], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 45, "severity": "error", "message": "Module has no attribute \"TypingMeta\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 45, "severity": "error", "message": "Module has no attribute \"TypingMeta\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 68, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 68, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 45, "severity": "error", "message": "Module has no attribute \"TypingMeta\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 45, "severity": "error", "message": "Module has no attribute \"TypingMeta\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 68, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 68, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 790, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 790, 790], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 791, "column": 45, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 791, 791], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 791, "column": 45, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 791, 791], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 792, "column": 28, "severity": "error", "message": "\"type\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 792, 792], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 792, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 792, 792], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 787, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 787, 792], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 787, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 787, 792], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 787, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 787, 792], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 796, "column": 16, "severity": "error", "message": "Cannot access \"__init__\" directly", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 796, 796], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 796, "column": 31, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any, VarArg(Any), KwArg(Any)], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 796, 796], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 798, "column": 12, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 798, 798], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 799, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 799, 799], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 799, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 799, 799], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 801, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 801, 801], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 801, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 801, 801], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 804, "column": 28, "severity": "error", "message": "Call to untyped function \"_get_protocol_attrs\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 804, 804], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 804, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 804, 804], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 804, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 804, 804], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 806, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 806, 806], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 806, "column": 35, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 806, 806], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 806, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 806, 806], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 807, "column": 31, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 807, 807], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 807, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 807, 807], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 807, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 807, 807], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 807, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 807, 807], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 810, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[<nothing>, <nothing>]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 810, 810], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 810, "column": 38, "severity": "error", "message": "Need type annotation for \"annotations\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "var-annotated", "description": "Require variable annotation if type can't be inferred", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 810, 810], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 811, "column": 39, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 811, 811], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 811, "column": 39, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 811, 811], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 812, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 812, 812], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 812, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 812, 812], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 812, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 812, 812], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 812, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 812, 812], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 813, "column": 50, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 813, 813], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 813, "column": 50, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 813, 813], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 814, "column": 32, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"_is_protocol\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 814, 814], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 814, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 814, 814], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 811, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 811, 814], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 811, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 811, 814], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 811, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 811, 814], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 805, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 805, 805], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 805, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 805, 805], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 805, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 805, 805], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 806, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 806, 806], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 806, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 806, 806], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 806, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 806, 806], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 806, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 806, 806], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 807, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 807, 807], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 807, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 807, 807], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 807, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 807, 807], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 807, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 807, 807], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 807, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 807, 807], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 810, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 810, 810], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 810, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 810, 810], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 810, "column": 71, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 810, 810], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 810, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 810, 810], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 811, "column": 39, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 811, 811], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 811, "column": 39, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 811, 811], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 812, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 812, 812], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 812, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 812, 812], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 812, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 812, 812], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 812, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 812, 812], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 813, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 813, 813], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 813, "column": 50, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 813, 813], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 813, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 813, 813], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 813, "column": 50, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 813, 813], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 814, "column": 32, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"_is_protocol\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 814, 814], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 814, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 814, 814], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 811, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 811, 814], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 811, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 811, 814], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "__init__", "line": 811, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 811, 814], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 819, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 819, 819], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__init__", "line": 820, "column": 39, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 820, 820], "target": "typing_extensions._ProtocolMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 822, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 822, 822], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 825, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 825, 825], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 825, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 825, 825], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 826, "column": 20, "severity": "error", "message": "Call to untyped function \"_is_callable_members_only\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 826, 826], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 826, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 826, 826], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 825, "column": 17, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[True], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 825, 826], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 825, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 825, 825], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 825, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 825, 825], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 826, "column": 20, "severity": "error", "message": "Call to untyped function \"_is_callable_members_only\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 826, 826], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 826, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 826, 826], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 825, "column": 17, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[True], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 825, 826], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 827, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 827, 827], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 827, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 827, 827], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 825, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 825, 827], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 833, "column": 36, "severity": "error", "message": "Call to untyped function \"_get_protocol_attrs\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 833, 833], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 833, "column": 36, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 833, 833], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 830, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 830, 830], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 830, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 830, 830], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 830, "column": 41, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 830, 830], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 830, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 830, 830], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 830, "column": 41, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 830, 830], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 831, "column": 52, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 831, 831], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 831, "column": 52, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 831, 831], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 831, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 831, 831], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 831, "column": 52, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 831, 831], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 831, "column": 52, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 831, 831], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 831, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 831, 831], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 832, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 832, 832], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 832, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 832, 832], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 832, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 832, 832], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 832, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 832, 832], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 832, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 832, 832], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 835, "column": 25, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 835, 835], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 835, "column": 19, "severity": "error", "message": "\"__instancecheck__\" undefined in superclass", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 835, 835], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 835, "column": 62, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 835, 835], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__instancecheck__", "line": 835, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 835, 835], "target": "typing_extensions._ProtocolMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 837, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 837, 837], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 838, "column": 15, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 838, 838], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 838, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 838, 838], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 839, "column": 19, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 839, 839], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 839, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 839, 839], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 839, "column": 19, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 839, 839], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 839, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 839, 839], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 843, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 843, 843], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 843, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 843, 843], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 843, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 843, 843], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 843, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 843, 843], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 844, "column": 24, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 844, 844], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 844, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 844, 844], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 843, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 843, 844], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 845, "column": 19, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 845, 845], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 845, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 845, 845], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 845, "column": 19, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 845, 845], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 845, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 845, 845], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 851, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 851, 851], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 851, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 851, 851], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 851, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 851, 851], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 851, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 851, 851], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 852, "column": 24, "severity": "error", "message": "Call to untyped function \"_is_callable_members_only\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 852, 852], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 852, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 852, 852], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 851, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 851, 852], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 853, "column": 19, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 853, 853], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 853, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 853, 853], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 853, "column": 19, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 853, 853], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 853, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 853, 853], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 856, "column": 33, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 856, 856], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 856, "column": 27, "severity": "error", "message": "\"__subclasscheck__\" undefined in superclass", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 856, 856], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 856, "column": 70, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 856, 856], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 856, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 856, 856], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 859, "column": 25, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[type]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 859, 859], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 859, "column": 19, "severity": "error", "message": "\"__subclasscheck__\" undefined in superclass", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 859, 859], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 859, "column": 62, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 859, 859], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__subclasscheck__", "line": 859, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 859, 859], "target": "typing_extensions._ProtocolMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 862, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 862, 862], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 865, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 865, 865], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 866, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 866, 866], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 866, "column": 25, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 866, 866], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 867, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 867, 867], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 867, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 867, 867], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 867, "column": 30, "severity": "error", "message": "Call to untyped function \"_gorg\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 867, 867], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 867, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 867, 867], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 871, "column": 56, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 871, 871], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 871, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 871, 871], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 871, "column": 39, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 871, 871], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 871, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 871, 871], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 871, "column": 26, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 871, 871], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 871, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 871, 871], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 872, "column": 15, "severity": "error", "message": "Non-overlapping container check (element type: \"_ProtocolMeta\", container item type: \"_SpecialForm\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "comparison-overlap", "description": "Check that types in comparisons and 'in' expressions overlap", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 872, 872], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 873, "column": 66, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 873, 873], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 873, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 873, 873], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 873, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 873, 873], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 873, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[TypeVar]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 873, 873], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 876, "column": 27, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 876, 876], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 876, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 876, 876], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 876, "column": 43, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 876, 876], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 876, "column": 43, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 876, 876], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 879, "column": 24, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 879, 879], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 880, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 880, 880], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 881, "column": 17, "severity": "error", "message": "Non-overlapping container check (element type: \"_ProtocolMeta\", container item type: \"_SpecialForm\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "comparison-overlap", "description": "Check that types in comparisons and 'in' expressions overlap", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 881, 881], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 882, "column": 35, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 882, 882], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 884, "column": 17, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 884, 884], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 884, "column": 17, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 884, 884], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 884, "column": 17, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 884, 884], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 884, "column": 17, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 884, 884], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 887, "column": 16, "severity": "error", "message": "Call to untyped function \"_check_generic\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 887, 887], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 887, "column": 37, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 887, 887], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 888, "column": 35, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 888, 888], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 891, "column": 33, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 891, 891], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 891, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 891, 891], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": null, "line": 861, "column": 9, "severity": "error", "message": "Module has no attribute \"_tp_cache\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 861, 861], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": null, "line": 861, "column": 9, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 861, 861], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": null, "line": 861, "column": 9, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[_ProtocolMeta, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 861, 861], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": null, "line": 862, "column": 8, "severity": "error", "message": "Function is untyped after decorator transformation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 862, 862], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__new__", "line": 933, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 933, 933], "target": "typing_extensions.Protocol.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__new__", "line": 934, "column": 15, "severity": "error", "message": "Call to untyped function \"_gorg\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 934, 934], "target": "typing_extensions.Protocol.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__new__", "line": 934, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 934, 934], "target": "typing_extensions.Protocol.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__new__", "line": 937, "column": 19, "severity": "error", "message": "Module has no attribute \"_generic_new\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 937, 937], "target": "typing_extensions.Protocol.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__new__", "line": 937, "column": 39, "severity": "error", "message": "\"Type[Protocol]\" has no attribute \"__next_in_mro__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 937, 937], "target": "typing_extensions.Protocol.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__new__", "line": 937, "column": 39, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 937, 937], "target": "typing_extensions.Protocol.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__new__", "line": 937, "column": 66, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 937, 937], "target": "typing_extensions.Protocol.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__new__", "line": 937, "column": 74, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 937, 937], "target": "typing_extensions.Protocol.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Protocol", "function_or_member": "__new__", "line": 937, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 937, 937], "target": "typing_extensions.Protocol.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "runtime_checkable", "line": 945, "column": 4, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 945, 945], "target": "typing_extensions.runtime_checkable"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "runtime_checkable", "line": 953, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 953, 953], "target": "typing_extensions.runtime_checkable"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "runtime_checkable", "line": 953, "column": 31, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 953, 953], "target": "typing_extensions.runtime_checkable"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "runtime_checkable", "line": 953, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 953, 953], "target": "typing_extensions.runtime_checkable"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "runtime_checkable", "line": 953, "column": 31, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_ProtocolMeta]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 953, 953], "target": "typing_extensions.runtime_checkable"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "runtime_checkable", "line": 953, "column": 53, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"_is_protocol\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 953, 953], "target": "typing_extensions.runtime_checkable"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "runtime_checkable", "line": 953, "column": 53, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 953, 953], "target": "typing_extensions.runtime_checkable"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "runtime_checkable", "line": 954, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 954, 955], "target": "typing_extensions.runtime_checkable"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "runtime_checkable", "line": 956, "column": 8, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"_is_runtime_protocol\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 956, 956], "target": "typing_extensions.runtime_checkable"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_check_fails", "line": 985, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 985, 985], "target": "typing_extensions._check_fails"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_check_fails", "line": 987, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 987, 987], "target": "typing_extensions._check_fails"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_check_fails", "line": 987, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 987, 987], "target": "typing_extensions._check_fails"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_check_fails", "line": 987, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 987, 987], "target": "typing_extensions._check_fails"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_check_fails", "line": 987, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 987, 987], "target": "typing_extensions._check_fails"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_dict_new", "line": 996, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 996, 996], "target": "typing_extensions._dict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_dict_new", "line": 997, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 997, 997], "target": "typing_extensions._dict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_dict_new", "line": 999, "column": 18, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 999, 999], "target": "typing_extensions._dict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_dict_new", "line": 999, "column": 18, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 999, 999], "target": "typing_extensions._dict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_dict_new", "line": 999, "column": 27, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 999, 999], "target": "typing_extensions._dict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_dict_new", "line": 999, "column": 27, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 999, 999], "target": "typing_extensions._dict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_dict_new", "line": 1000, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1000, 1000], "target": "typing_extensions._dict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_dict_new", "line": 1000, "column": 29, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1000, 1000], "target": "typing_extensions._dict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_dict_new", "line": 1000, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1000, 1000], "target": "typing_extensions._dict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_dict_new", "line": 1000, "column": 29, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1000, 1000], "target": "typing_extensions._dict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_dict_new", "line": 1000, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1000, 1000], "target": "typing_extensions._dict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_dict_new", "line": 1000, "column": 29, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1000, 1000], "target": "typing_extensions._dict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_dict_new", "line": 1000, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1000, 1000], "target": "typing_extensions._dict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1002, "column": 4, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[VarArg(Any), KwArg(Any)], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1002, 1002], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1002, "column": 4, "severity": "error", "message": "\"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no attribute \"__text_signature__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1002, 1002], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1002, "column": 4, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[VarArg(Any), KwArg(Any)], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1002, 1002], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1002, "column": 4, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[VarArg(Any), KwArg(Any)], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1002, 1002], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1004, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1004, 1004], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1005, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1005, 1005], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1007, "column": 18, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1007, 1007], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1007, "column": 18, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1007, 1007], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1007, "column": 27, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1007, 1007], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1007, "column": 27, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1007, 1007], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1008, "column": 11, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1008, 1008], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1009, "column": 29, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1009, 1009], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1009, "column": 29, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1009, 1009], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1009, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1009, 1009], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1010, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1010, 1010], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1011, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1011, 1011], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1011, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1011, 1011], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1018, "column": 11, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1018, 1018], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1020, "column": 26, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1020, 1020], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1020, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1020, 1020], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1023, "column": 64, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1023, 1023], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1025, "column": 26, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1025, 1025], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1025, "column": 26, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1025, 1025], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1025, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1025, 1025], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1026, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1026, 1026], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1026, "column": 21, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1026, 1026], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1033, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1033, 1033], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1034, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1034, 1034], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1035, "column": 13, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1035, 1035], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1039, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1039, 1039], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1039, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1039, 1039], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1039, "column": 33, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1039, 1039], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1039, "column": 13, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1039, 1039], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1042, "column": 12, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1042, 1042], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1042, "column": 31, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1042, 1042], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1042, "column": 31, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1042, 1042], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1046, "column": 15, "severity": "error", "message": "Call to untyped function \"_TypedDictMeta\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1046, 1046], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1046, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1046, 1046], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1046, "column": 44, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Dict[Any, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1046, 1046], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_typeddict_new", "line": 1046, "column": 54, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1046, 1046], "target": "typing_extensions._typeddict_new"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1048, "column": 4, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[VarArg(Any), DefaultNamedArg(Any, 'total'), KwArg(Any)], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1048, 1048], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1048, "column": 4, "severity": "error", "message": "\"Callable[[VarArg(Any), DefaultNamedArg(Any, 'total'), KwArg(Any)], Any]\" has no attribute \"__text_signature__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1048, 1048], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1048, "column": 4, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[VarArg(Any), DefaultNamedArg(Any, 'total'), KwArg(Any)], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1048, 1048], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1048, "column": 4, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[VarArg(Any), DefaultNamedArg(Any, 'total'), KwArg(Any)], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1048, 1048], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__init__", "line": 1052, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1052, 1052], "target": "typing_extensions._TypedDictMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__init__", "line": 1053, "column": 29, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1053, 1053], "target": "typing_extensions._TypedDictMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__init__", "line": 1053, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1053, 1053], "target": "typing_extensions._TypedDictMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__init__", "line": 1053, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1053, 1053], "target": "typing_extensions._TypedDictMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__init__", "line": 1053, "column": 29, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1053, 1053], "target": "typing_extensions._TypedDictMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__init__", "line": 1053, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1053, 1053], "target": "typing_extensions._TypedDictMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__init__", "line": 1053, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1053, 1053], "target": "typing_extensions._TypedDictMeta.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1055, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1055, 1055], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1062, "column": 12, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1062, 1062], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1062, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1062, 1062], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1062, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1062, 1062], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1062, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[VarArg(Any), DefaultNamedArg(Any, 'total'), KwArg(Any)], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1062, 1062], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1062, "column": 71, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[VarArg(Any), KwArg(Any)], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1062, 1062], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1062, "column": 71, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[VarArg(Any), KwArg(Any)], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1062, 1062], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1063, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1063, 1063], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1063, "column": 58, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1063, 1063], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1063, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1063, 1063], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1063, "column": 58, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1063, 1063], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1066, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1066, 1066], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1066, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1066, 1066], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1067, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1067, 1067], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1067, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1067, 1067], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1067, "column": 34, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1067, 1067], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1070, "column": 60, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1070, 1070], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1070, "column": 60, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1070, 1070], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1069, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1069, 1069], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1069, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1069, 1069], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1069, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1069, 1069], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1070, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1070, 1070], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1070, "column": 19, "severity": "error", "message": "Module has no attribute \"_type_check\"; maybe \"no_type_check\" or \"type_check_only\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1070, 1070], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1070, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1070, 1070], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1070, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1070, 1070], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1069, "column": 30, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1069, 1071], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1075, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1075, 1075], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1075, "column": 12, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1075, 1075], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1076, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1076, 1076], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1076, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1076, 1076], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1076, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1076, 1076], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1076, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1076, 1076], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1076, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1076, 1076], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1076, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1076, 1076], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1076, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1076, 1076], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1076, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1076, 1076], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1076, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1076, 1076], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1076, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1076, 1076], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1077, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1077, 1077], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1077, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1077, 1077], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1077, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1077, 1077], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1077, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1077, 1077], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1077, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1077, 1077], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1077, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1077, 1077], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1077, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1077, 1077], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1078, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1078, 1078], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1078, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1078, 1078], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1078, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1078, 1078], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1078, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1078, 1078], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1078, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1078, 1078], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1078, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1078, 1078], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1078, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1078, 1078], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1080, "column": 12, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1080, 1080], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1080, "column": 31, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1080, 1080], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1080, "column": 31, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1080, 1080], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1081, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1081, 1081], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1082, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1082, 1082], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1082, "column": 37, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1082, 1082], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1084, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1084, 1084], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1084, "column": 37, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1084, 1084], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1087, "column": 12, "severity": "error", "message": "\"_TypedDictMeta\" has no attribute \"__required_keys__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1087, 1087], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1087, "column": 50, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1087, 1087], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1087, "column": 40, "severity": "error", "message": "Expression type contains \"Any\" (has type \"FrozenSet[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1087, 1087], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1088, "column": 12, "severity": "error", "message": "\"_TypedDictMeta\" has no attribute \"__optional_keys__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1088, 1088], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1088, "column": 50, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1088, 1088], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1088, "column": 40, "severity": "error", "message": "Expression type contains \"Any\" (has type \"FrozenSet[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1088, 1088], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1090, "column": 16, "severity": "error", "message": "\"_TypedDictMeta\" has no attribute \"__total__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1090, 1090], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": "__new__", "line": 1090, "column": 36, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1090, 1090], "target": "typing_extensions._TypedDictMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": null, "line": 1093, "column": 48, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1093, 1093], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": null, "line": 1093, "column": 48, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1093, 1093], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": null, "line": 1093, "column": 8, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1093, 1093], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypedDictMeta", "function_or_member": null, "line": 1093, "column": 8, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1093, 1093], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1095, "column": 16, "severity": "error", "message": "Call to untyped function \"_TypedDictMeta\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1095, 1095], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1095, "column": 53, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1095, 1095], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1131, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Union[object, Callable[..., Any], FunctionType, BuiltinFunctionType, MethodType, Module, WrapperDescriptorType, MethodWrapperType, MethodDescriptorType], Optional[Dict[str, Any]], Optional[Dict[str, Any]], bool], Dict[str, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1131, 1131], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1134, "column": 22, "severity": "error", "message": "Module has no attribute \"_AnnotatedAlias\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1134, 1134], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1134, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1134, 1134], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__init__", "line": 1145, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1145, 1145], "target": "typing_extensions._AnnotatedAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__init__", "line": 1146, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1146, 1146], "target": "typing_extensions._AnnotatedAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__init__", "line": 1146, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1146, 1146], "target": "typing_extensions._AnnotatedAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__init__", "line": 1147, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1147, 1147], "target": "typing_extensions._AnnotatedAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__init__", "line": 1147, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1147, 1147], "target": "typing_extensions._AnnotatedAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__init__", "line": 1147, "column": 49, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1147, 1147], "target": "typing_extensions._AnnotatedAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__init__", "line": 1147, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1147, 1147], "target": "typing_extensions._AnnotatedAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__init__", "line": 1148, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1148, 1148], "target": "typing_extensions._AnnotatedAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__init__", "line": 1148, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1148, 1148], "target": "typing_extensions._AnnotatedAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__init__", "line": 1149, "column": 29, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1149, 1149], "target": "typing_extensions._AnnotatedAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__init__", "line": 1149, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1149, 1149], "target": "typing_extensions._AnnotatedAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__init__", "line": 1150, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1150, 1150], "target": "typing_extensions._AnnotatedAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "copy_with", "line": 1152, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1152, 1152], "target": "typing_extensions._AnnotatedAlias.copy_with"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "copy_with", "line": 1153, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1153, 1153], "target": "typing_extensions._AnnotatedAlias.copy_with"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "copy_with", "line": 1154, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1154, 1154], "target": "typing_extensions._AnnotatedAlias.copy_with"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "copy_with", "line": 1154, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1154, 1154], "target": "typing_extensions._AnnotatedAlias.copy_with"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "copy_with", "line": 1155, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1155, 1155], "target": "typing_extensions._AnnotatedAlias.copy_with"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "copy_with", "line": 1155, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1155, 1155], "target": "typing_extensions._AnnotatedAlias.copy_with"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "copy_with", "line": 1155, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1155, 1155], "target": "typing_extensions._AnnotatedAlias.copy_with"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__repr__", "line": 1157, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1157, 1157], "target": "typing_extensions._AnnotatedAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__repr__", "line": 1158, "column": 51, "severity": "error", "message": "Module has no attribute \"_type_repr\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1158, 1158], "target": "typing_extensions._AnnotatedAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__repr__", "line": 1158, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1158, 1158], "target": "typing_extensions._AnnotatedAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__repr__", "line": 1159, "column": 50, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1159, 1159], "target": "typing_extensions._AnnotatedAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__repr__", "line": 1159, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1159, 1159], "target": "typing_extensions._AnnotatedAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__repr__", "line": 1159, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1159, 1159], "target": "typing_extensions._AnnotatedAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__reduce__", "line": 1161, "column": 8, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1161, 1161], "target": "typing_extensions._AnnotatedAlias.__reduce__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__reduce__", "line": 1163, "column": 48, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1163, 1163], "target": "typing_extensions._AnnotatedAlias.__reduce__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__reduce__", "line": 1163, "column": 48, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1163, 1163], "target": "typing_extensions._AnnotatedAlias.__reduce__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__reduce__", "line": 1163, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1163, 1163], "target": "typing_extensions._AnnotatedAlias.__reduce__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__reduce__", "line": 1162, "column": 37, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[_SpecialForm, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1162, 1164], "target": "typing_extensions._AnnotatedAlias.__reduce__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__reduce__", "line": 1162, "column": 19, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[overloaded function, Tuple[_SpecialForm, Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1162, 1164], "target": "typing_extensions._AnnotatedAlias.__reduce__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__eq__", "line": 1166, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1166, 1166], "target": "typing_extensions._AnnotatedAlias.__eq__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__eq__", "line": 1167, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1167, 1167], "target": "typing_extensions._AnnotatedAlias.__eq__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__eq__", "line": 1167, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1167, 1167], "target": "typing_extensions._AnnotatedAlias.__eq__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__eq__", "line": 1169, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1169, 1169], "target": "typing_extensions._AnnotatedAlias.__eq__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__eq__", "line": 1169, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1169, 1169], "target": "typing_extensions._AnnotatedAlias.__eq__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__eq__", "line": 1169, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1169, 1169], "target": "typing_extensions._AnnotatedAlias.__eq__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__eq__", "line": 1171, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1171, 1171], "target": "typing_extensions._AnnotatedAlias.__eq__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__eq__", "line": 1171, "column": 40, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1171, 1171], "target": "typing_extensions._AnnotatedAlias.__eq__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__eq__", "line": 1171, "column": 40, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1171, 1171], "target": "typing_extensions._AnnotatedAlias.__eq__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__eq__", "line": 1171, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1171, 1171], "target": "typing_extensions._AnnotatedAlias.__eq__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__hash__", "line": 1173, "column": 8, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1173, 1173], "target": "typing_extensions._AnnotatedAlias.__hash__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__hash__", "line": 1174, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1174, 1174], "target": "typing_extensions._AnnotatedAlias.__hash__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": "__hash__", "line": 1174, "column": 24, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1174, 1174], "target": "typing_extensions._AnnotatedAlias.__hash__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": null, "line": 1137, "column": 4, "severity": "error", "message": "Unexpected keyword argument \"_root\" for \"__init_subclass__\" of \"object\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "/.venv/lib/site-packages/mypy/typeshed/stdlib/builtins.pyi", "module": "typing_extensions", "type": "_AnnotatedAlias", "function_or_member": null, "line": 111, "column": 4, "severity": "note", "message": "\"__init_subclass__\" of \"object\" defined here", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1137, 1137], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": "__new__", "line": 1211, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1211, 1211], "target": "typing_extensions.Annotated.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": "__class_getitem__", "line": 1215, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1215, 1215], "target": "typing_extensions.Annotated.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": "__class_getitem__", "line": 1216, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1216, 1216], "target": "typing_extensions.Annotated.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": "__class_getitem__", "line": 1216, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1216, 1216], "target": "typing_extensions.Annotated.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": "__class_getitem__", "line": 1221, "column": 21, "severity": "error", "message": "Module has no attribute \"_type_check\"; maybe \"no_type_check\" or \"type_check_only\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1221, 1221], "target": "typing_extensions.Annotated.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": "__class_getitem__", "line": 1221, "column": 21, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1221, 1221], "target": "typing_extensions.Annotated.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": "__class_getitem__", "line": 1222, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1222, 1222], "target": "typing_extensions.Annotated.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": "__class_getitem__", "line": 1223, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1223, 1223], "target": "typing_extensions.Annotated.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": "__class_getitem__", "line": 1223, "column": 43, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1223, 1223], "target": "typing_extensions.Annotated.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": "__class_getitem__", "line": 1223, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1223, 1223], "target": "typing_extensions.Annotated.__class_getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": null, "line": 1214, "column": 9, "severity": "error", "message": "Module has no attribute \"_tp_cache\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1214, 1214], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": null, "line": 1214, "column": 9, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1214, 1214], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": null, "line": 1214, "column": 9, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Type[Annotated], Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1214, 1214], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": null, "line": 1215, "column": 8, "severity": "error", "message": "Function is untyped after decorator transformation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1215, 1215], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "Annotated", "function_or_member": "__init_subclass__", "line": 1225, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1225, 1225], "target": "typing_extensions.Annotated.__init_subclass__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1230, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1230, 1230], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1233, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1233, 1233], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1233, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1233, 1233], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1234, "column": 19, "severity": "error", "message": "Call to untyped function \"_strip_annotations\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1234, 1234], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1234, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1234, 1234], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1234, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1234, 1234], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1234, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1234, 1234], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1235, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1235, 1235], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1235, "column": 25, "severity": "error", "message": "Module has no attribute \"_GenericAlias\"; maybe \"GenericAlias\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1235, 1235], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1235, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1235, 1235], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1236, "column": 65, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1236, 1236], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1236, "column": 65, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1236, 1236], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1236, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1236, 1236], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1236, "column": 34, "severity": "error", "message": "Call to untyped function \"_strip_annotations\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1236, 1236], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1236, "column": 53, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1236, 1236], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1236, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1236, 1236], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1236, "column": 33, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1236, 1236], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1236, "column": 28, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1236, 1236], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1237, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1237, 1237], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1237, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1237, 1237], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1237, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1237, 1237], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1237, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1237, 1237], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1238, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1238, 1238], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1239, "column": 18, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1239, 1239], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1239, "column": 30, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1239, 1239], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1239, "column": 18, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1239, 1239], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1240, "column": 12, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1240, 1240], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1240, "column": 12, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1240, 1240], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1240, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1240, 1240], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1240, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1240, 1240], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1240, "column": 12, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1240, 1240], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1241, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1241, 1241], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_strip_annotations", "line": 1242, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1242, 1242], "target": "typing_extensions._strip_annotations"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1244, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1244, 1244], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1275, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1275, 1275], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1275, "column": 51, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1275, 1275], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1275, "column": 69, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1275, 1275], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1275, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1275, 1275], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1276, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1276, 1276], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1277, "column": 19, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1277, 1277], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1278, "column": 53, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1278, 1278], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1278, "column": 53, "severity": "error", "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1278, 1278], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1278, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1278, 1278], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1278, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1278, 1278], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1278, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1278, 1278], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1278, "column": 19, "severity": "error", "message": "Call to untyped function \"_strip_annotations\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1278, 1278], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1278, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1278, 1278], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1278, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1278, 1278], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "get_type_hints", "line": 1278, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1278, 1278], "target": "typing_extensions.get_type_hints"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_dunder", "line": 1282, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1282, 1282], "target": "typing_extensions._is_dunder"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_dunder", "line": 1284, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1284, 1284], "target": "typing_extensions._is_dunder"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_dunder", "line": 1284, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1284, 1284], "target": "typing_extensions._is_dunder"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_dunder", "line": 1284, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1284, 1284], "target": "typing_extensions._is_dunder"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_dunder", "line": 1284, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1284, 1284], "target": "typing_extensions._is_dunder"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_dunder", "line": 1284, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1284, 1284], "target": "typing_extensions._is_dunder"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_dunder", "line": 1284, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1284, 1284], "target": "typing_extensions._is_dunder"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_dunder", "line": 1284, "column": 59, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1284, 1284], "target": "typing_extensions._is_dunder"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_dunder", "line": 1284, "column": 59, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1284, 1284], "target": "typing_extensions._is_dunder"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_dunder", "line": 1284, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1284, 1284], "target": "typing_extensions._is_dunder"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_is_dunder", "line": 1284, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1284, 1284], "target": "typing_extensions._is_dunder"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__new__", "line": 1293, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1293, 1293], "target": "typing_extensions.AnnotatedMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__new__", "line": 1294, "column": 44, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1294, 1294], "target": "typing_extensions.AnnotatedMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__new__", "line": 1294, "column": 18, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1294, 1294], "target": "typing_extensions.AnnotatedMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__new__", "line": 1294, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1294, 1294], "target": "typing_extensions.AnnotatedMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__new__", "line": 1296, "column": 40, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1296, 1296], "target": "typing_extensions.AnnotatedMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__new__", "line": 1296, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1296, 1296], "target": "typing_extensions.AnnotatedMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__new__", "line": 1296, "column": 53, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1296, 1296], "target": "typing_extensions.AnnotatedMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__new__", "line": 1296, "column": 66, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1296, 1296], "target": "typing_extensions.AnnotatedMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__new__", "line": 1296, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1296, 1296], "target": "typing_extensions.AnnotatedMeta.__new__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__metadata__", "line": 1299, "column": 8, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1299, 1299], "target": "typing_extensions.AnnotatedMeta.__metadata__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__metadata__", "line": 1300, "column": 19, "severity": "error", "message": "Call to untyped function \"_subs_tree\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1300, 1300], "target": "typing_extensions.AnnotatedMeta.__metadata__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__metadata__", "line": 1300, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1300, 1300], "target": "typing_extensions.AnnotatedMeta.__metadata__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__metadata__", "line": 1300, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1300, 1300], "target": "typing_extensions.AnnotatedMeta.__metadata__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": null, "line": 1299, "column": 8, "severity": "error", "message": "Type of decorated function contains type \"Any\" (\"Callable[[AnnotatedMeta], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1299, 1299], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1302, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1302, 1302], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1303, "column": 36, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1303, 1303], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1303, "column": 36, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1303, 1303], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1303, "column": 36, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1303, 1303], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1303, "column": 36, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1303, 1303], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1304, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1304, 1304], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1305, "column": 26, "severity": "error", "message": "Module has no attribute \"_type_repr\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1305, 1305], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1305, "column": 44, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1305, 1305], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1305, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1305, 1305], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1307, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1307, 1307], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1308, "column": 60, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1308, 1308], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1308, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1308, 1308], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1308, "column": 44, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1308, 1308], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1309, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1309, 1309], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_tree_repr", "line": 1309, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1309, 1309], "target": "typing_extensions.AnnotatedMeta._tree_repr"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1311, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1311, 1311], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1314, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1314, 1314], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1314, "column": 55, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1314, 1314], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1314, "column": 18, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1314, 1314], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1316, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1316, 1316], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1316, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1316, 1316], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1316, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1316, 1316], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1316, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1316, 1316], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1316, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1316, 1316], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1317, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1317, 1317], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1318, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1318, 1318], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1319, "column": 55, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1319, 1319], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1319, "column": 55, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1319, 1319], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1319, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1319, 1319], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1319, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[_SpecialForm, Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1319, 1319], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_subs_tree", "line": 1320, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1320, 1320], "target": "typing_extensions.AnnotatedMeta._subs_tree"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_get_cons", "line": 1322, "column": 8, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1322, 1322], "target": "typing_extensions.AnnotatedMeta._get_cons"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_get_cons", "line": 1324, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1324, 1324], "target": "typing_extensions.AnnotatedMeta._get_cons"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_get_cons", "line": 1327, "column": 19, "severity": "error", "message": "Call to untyped function \"_subs_tree\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1327, 1327], "target": "typing_extensions.AnnotatedMeta._get_cons"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_get_cons", "line": 1327, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1327, 1327], "target": "typing_extensions.AnnotatedMeta._get_cons"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_get_cons", "line": 1328, "column": 29, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1328, 1328], "target": "typing_extensions.AnnotatedMeta._get_cons"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_get_cons", "line": 1328, "column": 29, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1328, 1328], "target": "typing_extensions.AnnotatedMeta._get_cons"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_get_cons", "line": 1330, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1330, 1330], "target": "typing_extensions.AnnotatedMeta._get_cons"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "_get_cons", "line": 1333, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1333, 1333], "target": "typing_extensions.AnnotatedMeta._get_cons"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1336, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1336, 1336], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1337, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1337, 1337], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1338, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1338, 1338], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1338, "column": 25, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1338, 1338], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1339, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1339, 1339], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1340, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1340, 1340], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1340, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1340, 1340], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1341, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1341, 1341], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1341, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1341, 1341], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1347, "column": 21, "severity": "error", "message": "Module has no attribute \"_type_check\"; maybe \"no_type_check\" or \"type_check_only\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1347, 1347], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1347, "column": 21, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1347, 1347], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1348, "column": 27, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1348, 1348], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": null, "line": 1335, "column": 9, "severity": "error", "message": "Module has no attribute \"_tp_cache\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1335, 1335], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": null, "line": 1335, "column": 9, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1335, 1335], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": null, "line": 1335, "column": 9, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[AnnotatedMeta, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1335, 1335], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": null, "line": 1336, "column": 8, "severity": "error", "message": "Function is untyped after decorator transformation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1336, 1336], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__call__", "line": 1359, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1359, 1359], "target": "typing_extensions.AnnotatedMeta.__call__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__call__", "line": 1360, "column": 19, "severity": "error", "message": "Call to untyped function \"_get_cons\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1360, 1360], "target": "typing_extensions.AnnotatedMeta.__call__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__call__", "line": 1360, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1360, 1360], "target": "typing_extensions.AnnotatedMeta.__call__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__call__", "line": 1361, "column": 27, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1361, 1361], "target": "typing_extensions.AnnotatedMeta.__call__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__call__", "line": 1361, "column": 35, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1361, 1361], "target": "typing_extensions.AnnotatedMeta.__call__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__call__", "line": 1361, "column": 21, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1361, 1361], "target": "typing_extensions.AnnotatedMeta.__call__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__call__", "line": 1363, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1363, 1363], "target": "typing_extensions.AnnotatedMeta.__call__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__call__", "line": 1363, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1363, 1363], "target": "typing_extensions.AnnotatedMeta.__call__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__call__", "line": 1363, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1363, 1363], "target": "typing_extensions.AnnotatedMeta.__call__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__call__", "line": 1366, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1366, 1366], "target": "typing_extensions.AnnotatedMeta.__call__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1368, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1368, 1368], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1370, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1370, 1370], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1370, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1370, 1370], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1370, "column": 51, "severity": "error", "message": "Call to untyped function \"_is_dunder\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1370, 1370], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1370, "column": 62, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1370, 1370], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1370, "column": 51, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1370, 1370], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1371, "column": 31, "severity": "error", "message": "Call to untyped function \"_get_cons\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1371, 1371], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1371, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1371, 1371], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1371, "column": 49, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1371, 1371], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1371, "column": 31, "severity": "error", "message": "Call to untyped function \"_get_cons\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1371, 1371], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1371, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1371, 1371], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1371, "column": 49, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1371, 1371], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1371, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1371, 1371], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getattr__", "line": 1372, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1372, 1372], "target": "typing_extensions.AnnotatedMeta.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1374, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1374, 1374], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1375, "column": 15, "severity": "error", "message": "Call to untyped function \"_is_dunder\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1375, 1375], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1375, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1375, 1375], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1375, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1375, 1375], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1375, "column": 15, "severity": "error", "message": "Call to untyped function \"_is_dunder\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1375, 1375], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1375, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1375, 1375], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1375, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1375, 1375], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1375, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1375, 1375], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1375, "column": 35, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1375, 1375], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1375, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1375, 1375], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1376, "column": 36, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1376, 1376], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1376, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1376, 1376], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1377, "column": 17, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1377, 1377], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1378, "column": 37, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1378, 1378], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1380, "column": 24, "severity": "error", "message": "Call to untyped function \"_get_cons\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1380, 1380], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1380, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1380, 1380], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1380, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1380, 1380], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__setattr__", "line": 1380, "column": 48, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1380, 1380], "target": "typing_extensions.AnnotatedMeta.__setattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__instancecheck__", "line": 1382, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1382, 1382], "target": "typing_extensions.AnnotatedMeta.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__subclasscheck__", "line": 1385, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1385, 1385], "target": "typing_extensions.AnnotatedMeta.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1424, "column": 17, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Optional[Any]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1424, 1424], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1425, "column": 15, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Tuple[Any, ...]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1425, 1425], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypeAliasForm", "function_or_member": "__repr__", "line": 1492, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1492, 1492], "target": "typing_extensions._TypeAliasForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypeAliasForm", "function_or_member": "__repr__", "line": 1493, "column": 42, "severity": "error", "message": "\"_TypeAliasForm\" has no attribute \"_name\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1493, 1493], "target": "typing_extensions._TypeAliasForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypeAliasForm", "function_or_member": "__repr__", "line": 1493, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1493, 1493], "target": "typing_extensions._TypeAliasForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypeAliasForm", "function_or_member": "__repr__", "line": 1493, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1493, 1493], "target": "typing_extensions._TypeAliasForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypeAliasForm", "function_or_member": null, "line": 1491, "column": 4, "severity": "error", "message": "Unexpected keyword argument \"_root\" for \"__init_subclass__\" of \"object\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1491, 1491], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "/.venv/lib/site-packages/mypy/typeshed/stdlib/builtins.pyi", "module": "typing_extensions", "type": "_TypeAliasForm", "function_or_member": null, "line": 111, "column": 4, "severity": "note", "message": "\"__init_subclass__\" of \"object\" defined here", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1491, 1491], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "TypeAlias", "line": 1496, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1496, 1496], "target": "typing_extensions.TypeAlias"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "TypeAlias", "line": 1507, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1507, 1507], "target": "typing_extensions.TypeAlias"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1495, "column": 5, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1495, 1495], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1495, "column": 5, "severity": "error", "message": "Too many arguments for \"_TypeAliasForm\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1495, 1495], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_Immutable", "function_or_member": "__copy__", "line": 1568, "column": 8, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1568, 1568], "target": "typing_extensions._Immutable.__copy__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_Immutable", "function_or_member": "__deepcopy__", "line": 1571, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1571, 1571], "target": "typing_extensions._Immutable.__deepcopy__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpecArgs", "function_or_member": "__init__", "line": 1586, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1586, 1586], "target": "typing_extensions.ParamSpecArgs.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpecArgs", "function_or_member": "__init__", "line": 1587, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1587, 1587], "target": "typing_extensions.ParamSpecArgs.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpecArgs", "function_or_member": "__repr__", "line": 1589, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1589, 1589], "target": "typing_extensions.ParamSpecArgs.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpecArgs", "function_or_member": "__repr__", "line": 1590, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1590, 1590], "target": "typing_extensions.ParamSpecArgs.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpecArgs", "function_or_member": "__repr__", "line": 1590, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1590, 1590], "target": "typing_extensions.ParamSpecArgs.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpecKwargs", "function_or_member": "__init__", "line": 1604, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1604, 1604], "target": "typing_extensions.ParamSpecKwargs.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpecKwargs", "function_or_member": "__init__", "line": 1605, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1605, 1605], "target": "typing_extensions.ParamSpecKwargs.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpecKwargs", "function_or_member": "__repr__", "line": 1607, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1607, 1607], "target": "typing_extensions.ParamSpecKwargs.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpecKwargs", "function_or_member": "__repr__", "line": 1608, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1608, 1608], "target": "typing_extensions.ParamSpecKwargs.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpecKwargs", "function_or_member": "__repr__", "line": 1608, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1608, 1608], "target": "typing_extensions.ParamSpecKwargs.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1612, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[ParamSpec]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1612, 1612], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1612, "column": 16, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[ParamSpec]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1612, 1612], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": null, "line": 1665, "column": 20, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[TypeVar]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1665, 1665], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": null, "line": 1665, "column": 20, "severity": "error", "message": "Incompatible types in assignment (expression has type \"Type[TypeVar]\", base class \"object\" defined the type as \"Type[_T]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "assignment", "description": "Check that assigned value is compatible with target", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1665, 1665], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "args", "line": 1668, "column": 8, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1668, 1668], "target": "typing_extensions.ParamSpec.args"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "args", "line": 1669, "column": 33, "severity": "error", "message": "Argument 1 to \"ParamSpecArgs\" has incompatible type \"typing_extensions.ParamSpec\"; expected \"typing.ParamSpec\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "arg-type", "description": "Check argument types in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1669, 1669], "target": "typing_extensions.ParamSpec.args"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": null, "line": 1668, "column": 8, "severity": "error", "message": "Type of decorated function contains type \"Any\" (\"Callable[[ParamSpec], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1668, 1668], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "kwargs", "line": 1672, "column": 8, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1672, 1672], "target": "typing_extensions.ParamSpec.kwargs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "kwargs", "line": 1673, "column": 35, "severity": "error", "message": "Argument 1 to \"ParamSpecKwargs\" has incompatible type \"typing_extensions.ParamSpec\"; expected \"typing.ParamSpec\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "arg-type", "description": "Check argument types in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1673, 1673], "target": "typing_extensions.ParamSpec.kwargs"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": null, "line": 1672, "column": 8, "severity": "error", "message": "Type of decorated function contains type \"Any\" (\"Callable[[ParamSpec], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1672, 1672], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__init__", "line": 1675, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1675, 1675], "target": "typing_extensions.ParamSpec.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__init__", "line": 1676, "column": 29, "severity": "error", "message": "Expression type contains \"Any\" (has type \"List[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1676, 1676], "target": "typing_extensions.ParamSpec.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__init__", "line": 1677, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1677, 1677], "target": "typing_extensions.ParamSpec.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__init__", "line": 1678, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1678, 1678], "target": "typing_extensions.ParamSpec.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__init__", "line": 1679, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1679, 1679], "target": "typing_extensions.ParamSpec.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__init__", "line": 1680, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1680, 1680], "target": "typing_extensions.ParamSpec.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__init__", "line": 1681, "column": 33, "severity": "error", "message": "Module has no attribute \"_type_check\"; maybe \"no_type_check\" or \"type_check_only\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1681, 1681], "target": "typing_extensions.ParamSpec.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__init__", "line": 1681, "column": 52, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1681, 1681], "target": "typing_extensions.ParamSpec.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__init__", "line": 1681, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1681, 1681], "target": "typing_extensions.ParamSpec.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__init__", "line": 1687, "column": 26, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1687, 1687], "target": "typing_extensions.ParamSpec.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__init__", "line": 1687, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1687, 1687], "target": "typing_extensions.ParamSpec.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__init__", "line": 1690, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1690, 1690], "target": "typing_extensions.ParamSpec.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__init__", "line": 1690, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1690, 1690], "target": "typing_extensions.ParamSpec.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__repr__", "line": 1693, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1693, 1693], "target": "typing_extensions.ParamSpec.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__repr__", "line": 1700, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1700, 1700], "target": "typing_extensions.ParamSpec.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__repr__", "line": 1700, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1700, 1700], "target": "typing_extensions.ParamSpec.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__hash__", "line": 1702, "column": 8, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1702, 1702], "target": "typing_extensions.ParamSpec.__hash__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__eq__", "line": 1705, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1705, 1705], "target": "typing_extensions.ParamSpec.__eq__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__eq__", "line": 1706, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1706, 1706], "target": "typing_extensions.ParamSpec.__eq__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__reduce__", "line": 1708, "column": 8, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1708, 1708], "target": "typing_extensions.ParamSpec.__reduce__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__reduce__", "line": 1709, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1709, 1709], "target": "typing_extensions.ParamSpec.__reduce__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "__call__", "line": 1712, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1712, 1712], "target": "typing_extensions.ParamSpec.__call__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "_get_type_vars", "line": 1717, "column": 12, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1717, 1717], "target": "typing_extensions.ParamSpec._get_type_vars"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "_get_type_vars", "line": 1718, "column": 31, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1718, 1718], "target": "typing_extensions.ParamSpec._get_type_vars"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "ParamSpec", "function_or_member": "_get_type_vars", "line": 1719, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1719, 1719], "target": "typing_extensions.ParamSpec._get_type_vars"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": null, "line": 1729, "column": 24, "severity": "error", "message": "Module has no attribute \"_GenericAlias\"; maybe \"GenericAlias\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1729, 1729], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": null, "line": 1729, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1729, 1729], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": null, "line": 1729, "column": 24, "severity": "error", "message": "Module has no attribute \"_GenericAlias\"; maybe \"GenericAlias\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1729, 1729], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": null, "line": 1729, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1729, 1729], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": null, "line": 1731, "column": 24, "severity": "error", "message": "Module has no attribute \"_TypingBase\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1731, 1731], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": null, "line": 1731, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1731, 1731], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__init__", "line": 1738, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1738, 1738], "target": "typing_extensions._ConcatenateGenericAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__init__", "line": 1739, "column": 29, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1739, 1739], "target": "typing_extensions._ConcatenateGenericAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__init__", "line": 1739, "column": 29, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1739, 1739], "target": "typing_extensions._ConcatenateGenericAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__init__", "line": 1740, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1740, 1740], "target": "typing_extensions._ConcatenateGenericAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__init__", "line": 1741, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1741, 1741], "target": "typing_extensions._ConcatenateGenericAlias.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__repr__", "line": 1743, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1743, 1743], "target": "typing_extensions._ConcatenateGenericAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__repr__", "line": 1744, "column": 25, "severity": "error", "message": "Module has no attribute \"_type_repr\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1744, 1744], "target": "typing_extensions._ConcatenateGenericAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__repr__", "line": 1744, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1744, 1744], "target": "typing_extensions._ConcatenateGenericAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__repr__", "line": 1745, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1745, 1745], "target": "typing_extensions._ConcatenateGenericAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__repr__", "line": 1745, "column": 20, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1745, 1745], "target": "typing_extensions._ConcatenateGenericAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__repr__", "line": 1746, "column": 61, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1746, 1746], "target": "typing_extensions._ConcatenateGenericAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__repr__", "line": 1746, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1746, 1746], "target": "typing_extensions._ConcatenateGenericAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__repr__", "line": 1746, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1746, 1746], "target": "typing_extensions._ConcatenateGenericAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__repr__", "line": 1746, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1746, 1746], "target": "typing_extensions._ConcatenateGenericAlias.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__hash__", "line": 1748, "column": 8, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1748, 1748], "target": "typing_extensions._ConcatenateGenericAlias.__hash__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__hash__", "line": 1749, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1749, 1749], "target": "typing_extensions._ConcatenateGenericAlias.__hash__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__hash__", "line": 1749, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1749, 1749], "target": "typing_extensions._ConcatenateGenericAlias.__hash__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__hash__", "line": 1749, "column": 24, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1749, 1749], "target": "typing_extensions._ConcatenateGenericAlias.__hash__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__call__", "line": 1752, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1752, 1752], "target": "typing_extensions._ConcatenateGenericAlias.__call__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__parameters__", "line": 1756, "column": 8, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1756, 1756], "target": "typing_extensions._ConcatenateGenericAlias.__parameters__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__parameters__", "line": 1758, "column": 29, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1758, 1758], "target": "typing_extensions._ConcatenateGenericAlias.__parameters__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__parameters__", "line": 1757, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1757, 1757], "target": "typing_extensions._ConcatenateGenericAlias.__parameters__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__parameters__", "line": 1758, "column": 57, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1758, 1758], "target": "typing_extensions._ConcatenateGenericAlias.__parameters__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__parameters__", "line": 1758, "column": 62, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[TypeVar]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1758, 1758], "target": "typing_extensions._ConcatenateGenericAlias.__parameters__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__parameters__", "line": 1758, "column": 78, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[ParamSpec]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1758, 1758], "target": "typing_extensions._ConcatenateGenericAlias.__parameters__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__parameters__", "line": 1758, "column": 61, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Type[TypeVar], Type[ParamSpec]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1758, 1758], "target": "typing_extensions._ConcatenateGenericAlias.__parameters__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__parameters__", "line": 1757, "column": 24, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1757, 1759], "target": "typing_extensions._ConcatenateGenericAlias.__parameters__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "__parameters__", "line": 1757, "column": 19, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1757, 1759], "target": "typing_extensions._ConcatenateGenericAlias.__parameters__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": null, "line": 1756, "column": 8, "severity": "error", "message": "Type of decorated function contains type \"Any\" (\"Callable[[_ConcatenateGenericAlias], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1756, 1756], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "_get_type_vars", "line": 1763, "column": 12, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1763, 1763], "target": "typing_extensions._ConcatenateGenericAlias._get_type_vars"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "_get_type_vars", "line": 1764, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1764, 1764], "target": "typing_extensions._ConcatenateGenericAlias._get_type_vars"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "_get_type_vars", "line": 1764, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1764, 1764], "target": "typing_extensions._ConcatenateGenericAlias._get_type_vars"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "_get_type_vars", "line": 1764, "column": 39, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1764, 1764], "target": "typing_extensions._ConcatenateGenericAlias._get_type_vars"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "_get_type_vars", "line": 1764, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1764, 1764], "target": "typing_extensions._ConcatenateGenericAlias._get_type_vars"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "_get_type_vars", "line": 1765, "column": 20, "severity": "error", "message": "Module has no attribute \"_get_type_vars\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1765, 1765], "target": "typing_extensions._ConcatenateGenericAlias._get_type_vars"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "_get_type_vars", "line": 1765, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1765, 1765], "target": "typing_extensions._ConcatenateGenericAlias._get_type_vars"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ConcatenateGenericAlias", "function_or_member": "_get_type_vars", "line": 1765, "column": 63, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1765, 1765], "target": "typing_extensions._ConcatenateGenericAlias._get_type_vars"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1770, "column": 0, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1770, 1770], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1771, "column": 7, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1771, 1771], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1771, "column": 7, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1771, 1771], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1773, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1773, 1773], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1774, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1774, 1774], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1774, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1774, 1774], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1775, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1775, 1775], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1775, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1775, 1775], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1775, "column": 38, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[ParamSpec]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1775, 1775], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1779, "column": 59, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1779, 1779], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1779, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1779, 1779], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1779, "column": 23, "severity": "error", "message": "Module has no attribute \"_type_check\"; maybe \"no_type_check\" or \"type_check_only\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1779, 1779], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1779, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1779, 1779], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1779, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1779, 1779], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1779, "column": 22, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1779, 1779], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1779, "column": 17, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1779, 1779], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1780, "column": 11, "severity": "error", "message": "Call to untyped function \"_ConcatenateGenericAlias\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1780, 1780], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1780, "column": 36, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1780, 1780], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "_concatenate_getitem", "line": 1780, "column": 42, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1780, 1780], "target": "typing_extensions._concatenate_getitem"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1769, "column": 1, "severity": "error", "message": "Module has no attribute \"_tp_cache\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1769, 1769], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1769, "column": 1, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1769, 1769], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1769, "column": 1, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1769, 1769], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1770, "column": 0, "severity": "error", "message": "Function is untyped after decorator transformation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1770, 1770], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1786, "column": 31, "severity": "error", "message": "Module has no attribute \"_ConcatenateGenericAlias\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1786, 1786], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Concatenate", "line": 1790, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1790, 1790], "target": "typing_extensions.Concatenate"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Concatenate", "line": 1801, "column": 36, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1801, 1801], "target": "typing_extensions.Concatenate"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Concatenate", "line": 1801, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1801, 1801], "target": "typing_extensions.Concatenate"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Concatenate", "line": 1801, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1801, 1801], "target": "typing_extensions.Concatenate"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1789, "column": 5, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1789, 1789], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1789, "column": 5, "severity": "error", "message": "Too many arguments for \"_TypeAliasForm\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1789, 1789], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypeGuardForm", "function_or_member": "__repr__", "line": 1866, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1866, 1866], "target": "typing_extensions._TypeGuardForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypeGuardForm", "function_or_member": "__repr__", "line": 1867, "column": 42, "severity": "error", "message": "\"_TypeGuardForm\" has no attribute \"_name\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1867, 1867], "target": "typing_extensions._TypeGuardForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypeGuardForm", "function_or_member": "__repr__", "line": 1867, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1867, 1867], "target": "typing_extensions._TypeGuardForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypeGuardForm", "function_or_member": "__repr__", "line": 1867, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1867, 1867], "target": "typing_extensions._TypeGuardForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_TypeGuardForm", "function_or_member": null, "line": 1865, "column": 4, "severity": "error", "message": "Unexpected keyword argument \"_root\" for \"__init_subclass__\" of \"object\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1865, 1865], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "/.venv/lib/site-packages/mypy/typeshed/stdlib/builtins.pyi", "module": "typing_extensions", "type": "_TypeGuardForm", "function_or_member": null, "line": 111, "column": 4, "severity": "note", "message": "\"__init_subclass__\" of \"object\" defined here", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1865, 1865], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "TypeGuard", "line": 1870, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1870, 1870], "target": "typing_extensions.TypeGuard"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "TypeGuard", "line": 1913, "column": 15, "severity": "error", "message": "Module has no attribute \"_type_check\"; maybe \"no_type_check\" or \"type_check_only\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1913, 1913], "target": "typing_extensions.TypeGuard"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "TypeGuard", "line": 1913, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1913, 1913], "target": "typing_extensions.TypeGuard"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "TypeGuard", "line": 1913, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1913, 1913], "target": "typing_extensions.TypeGuard"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "TypeGuard", "line": 1913, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1913, 1913], "target": "typing_extensions.TypeGuard"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "TypeGuard", "line": 1914, "column": 15, "severity": "error", "message": "Module has no attribute \"_GenericAlias\"; maybe \"GenericAlias\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1914, 1914], "target": "typing_extensions.TypeGuard"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "TypeGuard", "line": 1914, "column": 36, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1914, 1914], "target": "typing_extensions.TypeGuard"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "TypeGuard", "line": 1914, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1914, 1914], "target": "typing_extensions.TypeGuard"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "TypeGuard", "line": 1914, "column": 42, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1914, 1914], "target": "typing_extensions.TypeGuard"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "TypeGuard", "line": 1914, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1914, 1914], "target": "typing_extensions.TypeGuard"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1869, "column": 5, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1869, 1869], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 1869, "column": 5, "severity": "error", "message": "Too many arguments for \"_TypeGuardForm\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1869, 1869], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2055, "column": 11, "severity": "error", "message": "Module has no attribute \"Self\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2055, 2055], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2055, "column": 11, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2055, 2055], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__init__", "line": 2061, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2061, 2061], "target": "typing_extensions._SpecialForm.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__init__", "line": 2062, "column": 28, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2062, 2062], "target": "typing_extensions._SpecialForm.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__init__", "line": 2063, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2063, 2063], "target": "typing_extensions._SpecialForm.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__init__", "line": 2063, "column": 25, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2063, 2063], "target": "typing_extensions._SpecialForm.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__init__", "line": 2064, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2064, 2064], "target": "typing_extensions._SpecialForm.__init__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__getattr__", "line": 2066, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2066, 2066], "target": "typing_extensions._SpecialForm.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__getattr__", "line": 2067, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2067, 2067], "target": "typing_extensions._SpecialForm.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__getattr__", "line": 2067, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2067, 2067], "target": "typing_extensions._SpecialForm.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__getattr__", "line": 2068, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2068, 2068], "target": "typing_extensions._SpecialForm.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__getattr__", "line": 2070, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2070, 2070], "target": "typing_extensions._SpecialForm.__getattr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__mro_entries__", "line": 2072, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2072, 2072], "target": "typing_extensions._SpecialForm.__mro_entries__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__repr__", "line": 2075, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2075, 2075], "target": "typing_extensions._SpecialForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__repr__", "line": 2076, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2076, 2076], "target": "typing_extensions._SpecialForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__reduce__", "line": 2078, "column": 8, "severity": "error", "message": "Function is missing a return type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2078, 2078], "target": "typing_extensions._SpecialForm.__reduce__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__reduce__", "line": 2079, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2079, 2079], "target": "typing_extensions._SpecialForm.__reduce__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__call__", "line": 2081, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2081, 2081], "target": "typing_extensions._SpecialForm.__call__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__or__", "line": 2084, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2084, 2084], "target": "typing_extensions._SpecialForm.__or__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__or__", "line": 2085, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2085, 2085], "target": "typing_extensions._SpecialForm.__or__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__or__", "line": 2085, "column": 32, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[_SpecialForm, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2085, 2085], "target": "typing_extensions._SpecialForm.__or__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__or__", "line": 2085, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2085, 2085], "target": "typing_extensions._SpecialForm.__or__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__or__", "line": 2085, "column": 32, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[_SpecialForm, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2085, 2085], "target": "typing_extensions._SpecialForm.__or__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__ror__", "line": 2087, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2087, 2087], "target": "typing_extensions._SpecialForm.__ror__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__ror__", "line": 2088, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2088, 2088], "target": "typing_extensions._SpecialForm.__ror__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__ror__", "line": 2088, "column": 32, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, _SpecialForm]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2088, 2088], "target": "typing_extensions._SpecialForm.__ror__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__ror__", "line": 2088, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2088, 2088], "target": "typing_extensions._SpecialForm.__ror__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__ror__", "line": 2088, "column": 32, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, _SpecialForm]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2088, 2088], "target": "typing_extensions._SpecialForm.__ror__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__instancecheck__", "line": 2090, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2090, 2090], "target": "typing_extensions._SpecialForm.__instancecheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__subclasscheck__", "line": 2093, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2093, 2093], "target": "typing_extensions._SpecialForm.__subclasscheck__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__getitem__", "line": 2097, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2097, 2097], "target": "typing_extensions._SpecialForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__getitem__", "line": 2098, "column": 39, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2098, 2098], "target": "typing_extensions._SpecialForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": "__getitem__", "line": 2098, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2098, 2098], "target": "typing_extensions._SpecialForm.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": null, "line": 2096, "column": 9, "severity": "error", "message": "Module has no attribute \"_tp_cache\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2096, 2096], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": null, "line": 2096, "column": 9, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2096, 2096], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": null, "line": 2096, "column": 9, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[_SpecialForm, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2096, 2096], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": null, "line": 2097, "column": 8, "severity": "error", "message": "Function is untyped after decorator transformation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2097, 2097], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": null, "line": 2058, "column": 4, "severity": "error", "message": "Unexpected keyword argument \"_root\" for \"__init_subclass__\" of \"object\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2058, 2058], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "/.venv/lib/site-packages/mypy/typeshed/stdlib/builtins.pyi", "module": "typing_extensions", "type": "_SpecialForm", "function_or_member": null, "line": 111, "column": 4, "severity": "note", "message": "\"__init_subclass__\" of \"object\" defined here", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2058, 2058], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Self", "line": 2101, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2101, 2101], "target": "typing_extensions.Self"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Self", "line": 2115, "column": 24, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2115, 2115], "target": "typing_extensions.Self"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2100, "column": 5, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[_SpecialForm]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2100, 2100], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2100, "column": 5, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2100, 2100], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2143, "column": 15, "severity": "error", "message": "Module has no attribute \"Required\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2143, 2143], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2143, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2143, 2143], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2144, "column": 18, "severity": "error", "message": "Module has no attribute \"NotRequired\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2144, 2144], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2144, "column": 18, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2144, 2144], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsSpecialForm", "function_or_member": "__repr__", "line": 2147, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2147, 2147], "target": "typing_extensions._ExtensionsSpecialForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsSpecialForm", "function_or_member": "__repr__", "line": 2148, "column": 42, "severity": "error", "message": "\"_ExtensionsSpecialForm\" has no attribute \"_name\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2148, 2148], "target": "typing_extensions._ExtensionsSpecialForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsSpecialForm", "function_or_member": "__repr__", "line": 2148, "column": 42, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2148, 2148], "target": "typing_extensions._ExtensionsSpecialForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsSpecialForm", "function_or_member": "__repr__", "line": 2148, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2148, 2148], "target": "typing_extensions._ExtensionsSpecialForm.__repr__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ExtensionsSpecialForm", "function_or_member": null, "line": 2146, "column": 4, "severity": "error", "message": "Unexpected keyword argument \"_root\" for \"__init_subclass__\" of \"object\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2146, 2146], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "/.venv/lib/site-packages/mypy/typeshed/stdlib/builtins.pyi", "module": "typing_extensions", "type": "_ExtensionsSpecialForm", "function_or_member": null, "line": 111, "column": 4, "severity": "note", "message": "\"__init_subclass__\" of \"object\" defined here", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2146, 2146], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Required", "line": 2151, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2151, 2151], "target": "typing_extensions.Required"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Required", "line": 2167, "column": 15, "severity": "error", "message": "Module has no attribute \"_type_check\"; maybe \"no_type_check\" or \"type_check_only\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2167, 2167], "target": "typing_extensions.Required"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Required", "line": 2167, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2167, 2167], "target": "typing_extensions.Required"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Required", "line": 2167, "column": 49, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2167, 2167], "target": "typing_extensions.Required"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Required", "line": 2167, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2167, 2167], "target": "typing_extensions.Required"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Required", "line": 2167, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2167, 2167], "target": "typing_extensions.Required"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Required", "line": 2168, "column": 15, "severity": "error", "message": "Module has no attribute \"_GenericAlias\"; maybe \"GenericAlias\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2168, 2168], "target": "typing_extensions.Required"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Required", "line": 2168, "column": 36, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2168, 2168], "target": "typing_extensions.Required"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Required", "line": 2168, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2168, 2168], "target": "typing_extensions.Required"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Required", "line": 2168, "column": 42, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2168, 2168], "target": "typing_extensions.Required"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "Required", "line": 2168, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2168, 2168], "target": "typing_extensions.Required"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2150, "column": 5, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2150, 2150], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2150, "column": 5, "severity": "error", "message": "Too many arguments for \"_ExtensionsSpecialForm\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2150, 2150], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "NotRequired", "line": 2171, "column": 4, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2171, 2171], "target": "typing_extensions.NotRequired"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "NotRequired", "line": 2184, "column": 15, "severity": "error", "message": "Module has no attribute \"_type_check\"; maybe \"no_type_check\" or \"type_check_only\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2184, 2184], "target": "typing_extensions.NotRequired"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "NotRequired", "line": 2184, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2184, 2184], "target": "typing_extensions.NotRequired"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "NotRequired", "line": 2184, "column": 49, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2184, 2184], "target": "typing_extensions.NotRequired"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "NotRequired", "line": 2184, "column": 46, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2184, 2184], "target": "typing_extensions.NotRequired"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "NotRequired", "line": 2184, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2184, 2184], "target": "typing_extensions.NotRequired"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "NotRequired", "line": 2185, "column": 15, "severity": "error", "message": "Module has no attribute \"_GenericAlias\"; maybe \"GenericAlias\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2185, 2185], "target": "typing_extensions.NotRequired"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "NotRequired", "line": 2185, "column": 36, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2185, 2185], "target": "typing_extensions.NotRequired"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "NotRequired", "line": 2185, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2185, 2185], "target": "typing_extensions.NotRequired"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "NotRequired", "line": 2185, "column": 42, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2185, 2185], "target": "typing_extensions.NotRequired"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": "NotRequired", "line": 2185, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2185, 2185], "target": "typing_extensions.NotRequired"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2170, "column": 5, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Callable[[Any, Any], Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2170, 2170], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": null, "function_or_member": null, "line": 2170, "column": 5, "severity": "error", "message": "Too many arguments for \"_ExtensionsSpecialForm\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "call-arg", "description": "Check number, names and kinds of arguments in calls", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 2170, 2170], "target": "typing_extensions"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 862, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 862, 862], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 865, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 865, 865], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 866, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 866, 866], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 866, "column": 25, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 866, 866], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 867, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 867, 867], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 867, "column": 19, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 867, 867], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 867, "column": 30, "severity": "error", "message": "Call to untyped function \"_gorg\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 867, 867], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 867, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 867, 867], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 871, "column": 56, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 871, 871], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 871, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 871, 871], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 871, "column": 39, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 871, 871], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 871, "column": 27, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 871, 871], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 871, "column": 26, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 871, 871], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 871, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 871, 871], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 872, "column": 15, "severity": "error", "message": "Non-overlapping container check (element type: \"_ProtocolMeta\", container item type: \"_SpecialForm\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "comparison-overlap", "description": "Check that types in comparisons and 'in' expressions overlap", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 872, 872], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 873, "column": 66, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 873, 873], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 873, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 873, 873], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 873, "column": 38, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 873, 873], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 873, "column": 41, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Type[TypeVar]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 873, 873], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 876, "column": 27, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 876, 876], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 876, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Set[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 876, 876], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 876, "column": 43, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 876, 876], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 876, "column": 43, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 876, 876], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 879, "column": 24, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 879, 879], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 880, "column": 23, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 880, 880], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 881, "column": 17, "severity": "error", "message": "Non-overlapping container check (element type: \"_ProtocolMeta\", container item type: \"_SpecialForm\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "comparison-overlap", "description": "Check that types in comparisons and 'in' expressions overlap", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 881, 881], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 882, "column": 35, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 882, 882], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 884, "column": 17, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 884, 884], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 884, "column": 17, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 884, 884], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 884, "column": 17, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 884, 884], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 884, "column": 17, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 884, 884], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 887, "column": 16, "severity": "error", "message": "Call to untyped function \"_check_generic\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 887, 887], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 887, "column": 37, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 887, 887], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 888, "column": 35, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 888, 888], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 891, "column": 33, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__origin__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 891, 891], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 891, "column": 33, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 891, 891], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 893, "column": 34, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Union[_ProtocolMeta, Any], ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 893, 893], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 894, "column": 34, "severity": "error", "message": "Call to untyped function \"_no_slots_copy\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 894, 894], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 894, "column": 49, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 894, 894], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 894, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 894, 894], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 896, "column": 39, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 896, 896], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 895, "column": 40, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 895, 895], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 898, "column": 40, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__extra__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 898, 898], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 898, "column": 40, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 898, 898], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 899, "column": 45, "severity": "error", "message": "\"_ProtocolMeta\" has no attribute \"__orig_bases__\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 899, 899], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "_ProtocolMeta", "function_or_member": "__getitem__", "line": 899, "column": 45, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 899, 899], "target": "typing_extensions._ProtocolMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1336, "column": 8, "severity": "error", "message": "Function is missing a type annotation", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-def", "description": "Check that every function has an annotation", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1336, 1336], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1337, "column": 30, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1337, 1337], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1338, "column": 26, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1338, 1338], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1338, "column": 25, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1338, 1338], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1339, "column": 15, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1339, 1339], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1340, "column": 43, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1340, 1340], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1340, "column": 23, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1340, 1340], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1341, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1341, 1341], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1341, "column": 32, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1341, 1341], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1347, "column": 21, "severity": "error", "message": "Module has no attribute \"_type_check\"; maybe \"no_type_check\" or \"type_check_only\"?", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "attr-defined", "description": "Check that attribute exists", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1347, 1347], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1347, "column": 21, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1347, 1347], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1348, "column": 27, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1348, 1348], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1350, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1350, 1350], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1351, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1351, 1351], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1352, "column": 16, "severity": "error", "message": "Call to untyped function \"_no_slots_copy\" in typed context", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "no-untyped-call", "description": "Disallow calling functions without type annotations from annotated functions", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1352, 1352], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1352, "column": 31, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1352, 1352], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1352, "column": 16, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1352, 1352], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1353, "column": 34, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1353, 1353], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1353, "column": 33, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1353, 1353], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1353, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1353, 1353], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1355, "column": 22, "severity": "error", "message": "Expression has type \"Any\"", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1355, 1355], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1355, "column": 26, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1355, 1355], "target": "typing_extensions.AnnotatedMeta.__getitem__"}, {".class": "mypy.errors.ErrorInfo", "import_ctx": [], "file": "typing_extensions/src/typing_extensions.py", "module": "typing_extensions", "type": "AnnotatedMeta", "function_or_member": "__getitem__", "line": 1355, "column": 21, "severity": "error", "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Tuple[Any, ...]]\")", "code": {".class": "mypy.errorcodes.ErrorCode", "code": "misc", "description": "Miscellaneous other checks", "category": "General", "default_enabled": true}, "blocker": false, "only_once": false, "allow_dups": false, "origin": ["typing_extensions/src/typing_extensions.py", 1355, 1355], "target": "typing_extensions.AnnotatedMeta.__getitem__"}]}